{"version":3,"file":"PresentationTool.cjs","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helpers.ts","../../../channels/src/controller.ts","../../../../node_modules/.pnpm/valibot@0.30.0/node_modules/valibot/dist/index.js","../../../visual-editing-helpers/dist/_chunks/transformSanityNodeData.js","../../../visual-editing-helpers/dist/index.js","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationNavigator.tsx","../../src/useLocalState.ts","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/reducers/presentationReducer.ts","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/ShareUrlMenuItems.tsx","../../src/preview/PreviewFrame.tsx","../../src/useDocumentsOnPage.ts","../../src/lib/parse.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ChannelMsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 1000\nexport const HANDSHAKE_INTERVAL = 500\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n  'channel/heartbeat',\n] satisfies ChannelMsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies ChannelMsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport { ChannelMsgType, HandshakeMsgType, InternalMsgType } from './types'\n\nexport const isInternalMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isLegacyHandshakeMessage = ({\n  data = {},\n}: MessageEvent): boolean => {\n  return (\n    // Check data is a record type\n    typeof data === 'object' &&\n    data !== null &&\n    !Array.isArray(data) &&\n    // The \"domain\" key was introduced in commit 4854e7f\n    !('domain' in data) &&\n    // Check the rest of the object shape is present\n    ['id', 'type', 'from', 'to'].every((key) => key in data) &&\n    // Prior to 4854e7f only handshake events were emitted prior to an established connection\n    data.type.startsWith('handshake/')\n  )\n}\n","import { v4 as uuid } from 'uuid'\n\nimport {\n  HANDSHAKE_INTERVAL,\n  HEARTBEAT_INTERVAL,\n  RESPONSE_TIMEOUT,\n} from './constants'\nimport { isHandshakeMessage, isLegacyHandshakeMessage } from './helpers'\nimport type {\n  ChannelMsg,\n  ChannelsController,\n  ChannelsControllerChannel,\n  ChannelsControllerOptions,\n  ChannelStatus,\n  InternalMsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\nexport function createChannelsController<\n  Sends extends ChannelMsg,\n  Receives extends ChannelMsg,\n>(config: ChannelsControllerOptions<Receives>): ChannelsController {\n  const { destroy, send } = createChannelsControllerInternal<Sends, Receives>(\n    config,\n  )\n  const sources = new Set<MessageEventSource>()\n  const sendToSource = new WeakMap<\n    MessageEventSource,\n    ChannelsController['send']\n  >()\n  const destroySource = new Set<ChannelsController['destroy']>()\n\n  const sendToMany = ((id, type, data) => {\n    send(id, type, data)\n    for (const source of sources) {\n      if (\n        source &&\n        'closed' in source &&\n        !source.closed &&\n        sendToSource.has(source)\n      ) {\n        const send = sendToSource.get(source)\n        send!(id, type, data)\n      }\n    }\n  }) satisfies ChannelsController['send']\n\n  const destroyMany = (() => {\n    destroy()\n    for (const destroy of destroySource) {\n      destroy()\n    }\n  }) satisfies ChannelsController['destroy']\n\n  return {\n    destroy: destroyMany,\n    send: sendToMany,\n    addSource(source) {\n      if (sources.has(source)) {\n        return\n      }\n      if (!('closed' in source)) {\n        // eslint-disable-next-line no-console\n        console.warn('Source is unsupported', { source })\n        throw new Error('Source is unsupported')\n      }\n      if (source.closed) {\n        throw new Error('Source is closed')\n      }\n      const { send, destroy } = createChannelsControllerInternal<\n        Sends,\n        Receives\n      >({\n        ...config,\n        target: source,\n        // @TODO temporary workaround for onStatusUpdate and onEvent not differentiating\n        //       iframes from popups\n        connectTo: config.connectTo.map((prevConnectTo) => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { onStatusUpdate, onEvent, ...connectTo } = prevConnectTo\n\n          return {\n            ...connectTo,\n            onEvent: onEvent\n              ? (((type, data) => {\n                  if (\n                    type === 'preview-kit/documents' ||\n                    type === 'overlay/navigate' ||\n                    type === 'loader/documents'\n                  ) {\n                    return\n                  }\n\n                  // @ts-expect-error -- figure out ToArgs complaining\n                  return onEvent(type, data)\n                }) satisfies typeof onEvent)\n              : undefined,\n          }\n        }),\n      })\n      destroySource.add(destroy)\n      sendToSource.set(source, send)\n      sources.add(source)\n    },\n  }\n}\n\nfunction createChannelsControllerInternal<\n  Sends extends ChannelMsg,\n  Receives extends ChannelMsg,\n>(\n  config: ChannelsControllerOptions<Receives>,\n): Omit<ChannelsController, 'addSource'> {\n  const target = config.target\n\n  const channels: ChannelsControllerChannel<Receives>[] = config.connectTo.map(\n    (config) => ({\n      buffer: [],\n      config,\n      id: '',\n      handler: handshakeHandler,\n      status: 'connecting',\n      interval: undefined,\n      heartbeat: undefined,\n    }),\n  )\n\n  function startHandshake(channel: ChannelsControllerChannel<Receives>) {\n    channel.id = uuid()\n    channel.interval = window.setInterval(() => {\n      sendHandshake(channel, 'handshake/syn', { id: channel.id })\n    }, HANDSHAKE_INTERVAL)\n  }\n\n  function stopHandshake(channel: ChannelsControllerChannel<Receives>) {\n    window.clearInterval(channel.interval)\n  }\n\n  function isValidMessageEvent(\n    e: MessageEvent,\n  ): e is MessageEvent<ProtocolMsg<Receives>> {\n    const { data, origin } = e\n    return (\n      data.domain === 'sanity/channels' &&\n      data.to == config.id &&\n      channels.map((channel) => channel.config.id).includes(data.from) &&\n      data.type !== 'channel/response' &&\n      origin === config.targetOrigin\n    )\n  }\n\n  function handshakeHandler(e: MessageEvent<ProtocolMsg<Receives>>) {\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel && data.type === 'handshake/syn-ack') {\n        setChannelStatus(channel, 'connected')\n        sendHandshake(channel, 'handshake/ack', { id: channel.id })\n      }\n    }\n  }\n\n  const messageHandler = (e: MessageEvent<ProtocolMsg<Receives>>) => {\n    const { data } = e\n    if (\n      !isHandshakeMessage(data.type) &&\n      channels.find((channel) => channel.id === data.connectionId)\n    ) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel) {\n        // eslint-disable-next-line no-warning-comments\n        // @todo Ugly type casting\n        const args = [data.type, data.data] as ToArgs<Receives>\n        channel.config.onEvent?.(...args)\n        config.onEvent?.(...args)\n        send(channel, 'channel/response', { responseTo: data.id }, false)\n      }\n    }\n  }\n\n  function handleEvents(e: MessageEvent<ProtocolMsg<Receives>>) {\n    if (isLegacyHandshakeMessage(e)) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\\nhttps://github.com/sanity-io/visual-editing',\n      )\n      return\n    }\n\n    if (isValidMessageEvent(e)) {\n      const { data } = e\n      channels.find((channel) => channel.config.id === data.from)?.handler(e)\n    }\n  }\n\n  function flush(channel: ChannelsControllerChannel<Receives>) {\n    const toFlush = [...channel.buffer]\n    channel.buffer.splice(0, channel.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      send(channel, type, data)\n    })\n  }\n\n  function startHeartbeat(channel: ChannelsControllerChannel<Receives>) {\n    stopHeartbeat(channel)\n    if (channel.config.heartbeat) {\n      const heartbeatInverval =\n        typeof channel.config.heartbeat === 'number'\n          ? channel.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      channel.heartbeat = window.setInterval(() => {\n        send(channel, 'channel/heartbeat')\n      }, heartbeatInverval)\n    }\n  }\n\n  function stopHeartbeat(channel: ChannelsControllerChannel<Receives>) {\n    if (channel.heartbeat) {\n      window.clearInterval(channel.heartbeat)\n    }\n  }\n\n  function setChannelStatus(\n    channel: ChannelsControllerChannel<Receives>,\n    next: ChannelStatus,\n  ) {\n    channel.status = next\n    channel.config.onStatusUpdate?.(next, channel.config.id)\n    config.onStatusUpdate?.(next, channel.config.id)\n    if (next === 'connecting' || next === 'reconnecting') {\n      channel.handler = handshakeHandler\n      stopHeartbeat(channel)\n      startHandshake(channel)\n    } else if (next === 'connected') {\n      channel.handler = messageHandler\n      stopHandshake(channel)\n      startHeartbeat(channel)\n      flush(channel)\n    } else if (next === 'disconnected') {\n      channel.id = null\n      channel.handler = handshakeHandler\n      stopHandshake(channel)\n      stopHeartbeat(channel)\n    }\n  }\n\n  function sendHandshake<T extends Sends['type']>(\n    channel: ChannelsControllerChannel<Receives>,\n    type: T,\n    data?: Extract<Sends, { type: T }>['data'],\n  ) {\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<Sends> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id: uuid(),\n      to: channel.config.id,\n      type,\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: '*' })\n    } catch (e) {\n      throw new Error(`Failed to postMessage '${msg.id}' on '${config.id}'`)\n    }\n  }\n\n  function send<T extends Sends['type']>(\n    channel: ChannelsControllerChannel<Receives>,\n    type: T | InternalMsgType,\n    data?: Extract<Sends, { type: T }>['data'],\n    expectResponse = true,\n  ) {\n    const id = uuid()\n\n    // If there is no active channel, push to the buffer\n    if (\n      channel.status === 'connecting' ||\n      channel.status === 'reconnecting' ||\n      channel.status === 'disconnected'\n    ) {\n      channel.buffer.push({ type, data })\n      return\n    }\n\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<Sends> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id,\n      to: channel.config.id,\n      type,\n    }\n\n    if (expectResponse) {\n      const maxWait = setTimeout(() => {\n        // The channel may have changed, so only reject if the IDs match\n        if (msg.connectionId === channel.id) {\n          // Cleanup the transaction listener\n          window.removeEventListener('message', transact, false)\n          // Push the message to the buffer\n          if (type !== 'channel/heartbeat') {\n            channel.buffer.push({ type, data })\n          }\n          // Try to reconnect\n          setChannelStatus(channel, 'reconnecting')\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Received no response to message '${msg.type}' on client '${config.id}' (ID: '${msg.id}').`,\n          )\n        }\n      }, RESPONSE_TIMEOUT)\n\n      const transact = (e: MessageEvent<ChannelMsg>) => {\n        const { data: eventData } = e\n        if (\n          eventData.type === 'channel/response' &&\n          eventData.data?.responseTo &&\n          eventData.data.responseTo === msg.id\n        ) {\n          window.removeEventListener('message', transact, false)\n          clearTimeout(maxWait)\n        }\n      }\n      window.addEventListener('message', transact, false)\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: config.targetOrigin })\n    } catch (e) {\n      throw new Error(\n        `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n      )\n    }\n  }\n\n  function disconnect() {\n    channels.forEach((channel) => {\n      if (['disconnected'].includes(channel.status)) return\n      send(channel, 'channel/disconnect', { id: channel.id }, false)\n      setChannelStatus(channel, 'disconnected')\n    })\n  }\n\n  function destroy() {\n    disconnect()\n    window.removeEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      stopHeartbeat(channel)\n      stopHandshake(channel)\n    })\n  }\n\n  function initialise() {\n    window.addEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      setChannelStatus(channel, 'connecting')\n    })\n  }\n\n  initialise()\n\n  function sendPublic<T extends Sends['type']>(\n    id: string | string[] | undefined,\n    type: T,\n    data?: Extract<Sends, { type: T }>['data'],\n  ) {\n    const channelsToSend = id ? (Array.isArray(id) ? [...id] : [id]) : channels\n\n    channelsToSend.forEach((id) => {\n      const channel = channels.find((channel) => channel.config.id === id)\n      if (!channel) throw new Error('Invalid channel ID')\n      send(channel, type, data)\n    })\n  }\n\n  return {\n    destroy,\n    send: sendPublic,\n  }\n}\n","// src/error/flatten/flatten.ts\nfunction flatten(arg1) {\n  return (Array.isArray(arg1) ? arg1 : arg1.issues).reduce(\n    (flatErrors, issue) => {\n      if (issue.path) {\n        if (issue.path.every(\n          ({ key }) => typeof key === \"string\" || typeof key === \"number\"\n        )) {\n          const path = issue.path.map(({ key }) => key).join(\".\");\n          if (flatErrors.nested[path]) {\n            flatErrors.nested[path].push(issue.message);\n          } else {\n            flatErrors.nested[path] = [issue.message];\n          }\n        }\n      } else {\n        if (flatErrors.root) {\n          flatErrors.root.push(issue.message);\n        } else {\n          flatErrors.root = [issue.message];\n        }\n      }\n      return flatErrors;\n    },\n    { nested: {} }\n  );\n}\n\n// src/error/ValiError/ValiError.ts\nvar ValiError = class extends Error {\n  issues;\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    this.name = \"ValiError\";\n    this.issues = issues;\n  }\n};\n\n// src/methods/brand/brand.ts\nvar BrandSymbol = Symbol(\"brand\");\nfunction brand(schema, name) {\n  return schema;\n}\n\n// src/methods/coerce/coerce.ts\nfunction coerce(schema, action) {\n  return {\n    ...schema,\n    _parse(input, config) {\n      return schema._parse(action(input), config);\n    }\n  };\n}\n\n// src/methods/coerce/coerceAsync.ts\nfunction coerceAsync(schema, action) {\n  return {\n    ...schema,\n    async _parse(input, config) {\n      return schema._parse(await action(input), config);\n    }\n  };\n}\n\n// src/utils/actionIssue/actionIssue.ts\nfunction actionIssue(context, reference, input, label, received) {\n  return {\n    issues: [{ context, reference, input, label, received }]\n  };\n}\n\n// src/utils/actionOutput/actionOutput.ts\nfunction actionOutput(output) {\n  return { output };\n}\n\n// src/utils/defaultArgs/defaultArgs.ts\nfunction defaultArgs(arg1, arg2) {\n  return Array.isArray(arg1) ? [void 0, arg1] : [arg1, arg2];\n}\n\n// src/storages/globalConfig/globalConfig.ts\nvar store;\nfunction setGlobalConfig(config) {\n  store = { ...store, ...config };\n}\nfunction getGlobalConfig(config) {\n  return {\n    lang: config?.lang ?? store?.lang,\n    message: config?.message,\n    abortEarly: config?.abortEarly ?? store?.abortEarly,\n    abortPipeEarly: config?.abortPipeEarly ?? store?.abortPipeEarly,\n    skipPipe: config?.skipPipe ?? store?.skipPipe\n  };\n}\nfunction deleteGlobalConfig() {\n  store = void 0;\n}\n\n// src/storages/globalMessage/globalMessage.ts\nvar store2;\nfunction setGlobalMessage(message, lang) {\n  if (!store2)\n    store2 = /* @__PURE__ */ new Map();\n  store2.set(lang, message);\n}\nfunction getGlobalMessage(lang) {\n  return store2?.get(lang);\n}\nfunction deleteGlobalMessage(lang) {\n  store2?.delete(lang);\n}\n\n// src/storages/schemaMessage/schemaMessage.ts\nvar store3;\nfunction setSchemaMessage(message, lang) {\n  if (!store3)\n    store3 = /* @__PURE__ */ new Map();\n  store3.set(lang, message);\n}\nfunction getSchemaMessage(lang) {\n  return store3?.get(lang);\n}\nfunction deleteSchemaMessage(lang) {\n  store3?.delete(lang);\n}\n\n// src/storages/specificMessage/specificMessage.ts\nvar store4;\nfunction setSpecificMessage(reference, message, lang) {\n  if (!store4)\n    store4 = /* @__PURE__ */ new Map();\n  if (!store4.get(reference))\n    store4.set(reference, /* @__PURE__ */ new Map());\n  store4.get(reference).set(lang, message);\n}\nfunction getSpecificMessage(reference, lang) {\n  return store4?.get(reference)?.get(lang);\n}\nfunction deleteSpecificMessage(reference, lang) {\n  store4?.get(reference)?.delete(lang);\n}\n\n// src/utils/i18n/i18n.ts\nfunction i18n(schema, context, reference, config, issue) {\n  const message = context.message ?? getSpecificMessage(reference, issue.lang) ?? (schema ? getSchemaMessage(issue.lang) : null) ?? config?.message ?? getGlobalMessage(issue.lang) ?? issue.message;\n  return typeof message === \"function\" ? message(issue) : message;\n}\n\n// src/utils/isLuhnAlgo/isLuhnAlgo.ts\nvar NON_DIGIT_REGEX = /\\D/gu;\nfunction isLuhnAlgo(input) {\n  const number2 = input.replace(NON_DIGIT_REGEX, \"\");\n  let length2 = number2.length;\n  let bit = 1;\n  let sum = 0;\n  while (length2) {\n    const value2 = +number2[--length2];\n    bit ^= 1;\n    sum += bit ? [0, 2, 4, 6, 8, 1, 3, 5, 7, 9][value2] : value2;\n  }\n  return sum % 10 === 0;\n}\n\n// src/utils/isOfType/isOfType.ts\nfunction isOfType(type, object2) {\n  return object2.type === type;\n}\n\n// src/utils/schemaResult/schemaResult.ts\nfunction schemaResult(typed, output, issues) {\n  return { typed, output, issues };\n}\n\n// src/utils/stringify/stringify.ts\nfunction stringify(input) {\n  let type = typeof input;\n  if (type === \"object\") {\n    type = input ? Object.getPrototypeOf(input).constructor.name : \"null\";\n  }\n  return type === \"string\" ? `\"${input}\"` : type === \"number\" || type === \"bigint\" || type === \"boolean\" ? `${input}` : type;\n}\n\n// src/utils/pipeResult/utils/pipeIssue/pipeIssue.ts\nfunction pipeIssue(context, config, issue) {\n  const received = issue.received ?? stringify(issue.input);\n  const schemaIssue2 = {\n    reason: context.type,\n    context: issue.context.type,\n    expected: issue.context.expects,\n    received,\n    message: `Invalid ${issue.label}: ${issue.context.expects ? `Expected ${issue.context.expects} but r` : \"R\"}eceived ${received}`,\n    input: issue.input,\n    requirement: issue.context.requirement,\n    path: issue.path,\n    lang: config?.lang,\n    abortEarly: config?.abortEarly,\n    abortPipeEarly: config?.abortPipeEarly,\n    skipPipe: config?.skipPipe\n  };\n  schemaIssue2.message = i18n(\n    false,\n    issue.context,\n    issue.reference,\n    config,\n    schemaIssue2\n  );\n  return schemaIssue2;\n}\n\n// src/utils/pipeResult/pipeResult.ts\nfunction pipeResult(context, input, config, issues) {\n  if (context.pipe && !config?.skipPipe) {\n    for (const action of context.pipe) {\n      const result = action._parse(input);\n      if (result.issues) {\n        for (const actionIssue2 of result.issues) {\n          const schemaIssue2 = pipeIssue(context, config, actionIssue2);\n          issues ? issues.push(schemaIssue2) : issues = [schemaIssue2];\n        }\n        if (config?.abortEarly || config?.abortPipeEarly) {\n          break;\n        }\n      } else {\n        input = result.output;\n      }\n    }\n  }\n  return schemaResult(true, input, issues);\n}\n\n// src/utils/pipeResult/pipeResultAsync.ts\nasync function pipeResultAsync(context, input, config, issues) {\n  if (context.pipe && !config?.skipPipe) {\n    for (const action of context.pipe) {\n      const result = await action._parse(input);\n      if (result.issues) {\n        for (const actionIssue2 of result.issues) {\n          const schemaIssue2 = pipeIssue(context, config, actionIssue2);\n          issues ? issues.push(schemaIssue2) : issues = [schemaIssue2];\n        }\n        if (config?.abortEarly || config?.abortPipeEarly) {\n          break;\n        }\n      } else {\n        input = result.output;\n      }\n    }\n  }\n  return schemaResult(true, input, issues);\n}\n\n// src/utils/restAndDefaultArgs/restAndDefaultArgs.ts\nfunction restAndDefaultArgs(arg1, arg2, arg3) {\n  if (!arg1 || typeof arg1 === \"object\" && !Array.isArray(arg1)) {\n    const [error2, pipe2] = defaultArgs(arg2, arg3);\n    return [arg1, error2, pipe2];\n  }\n  const [error, pipe] = defaultArgs(\n    arg1,\n    arg2\n  );\n  return [void 0, error, pipe];\n}\n\n// src/utils/schemaIssue/schemaIssue.ts\nfunction schemaIssue(context, reference, input, config, other) {\n  const received = stringify(input);\n  const expected = other?.expected ?? context.expects;\n  const issue = {\n    reason: other?.reason ?? \"type\",\n    context: context.type,\n    expected,\n    received,\n    message: `Invalid type: Expected ${expected} but received ${received}`,\n    input,\n    path: other?.path,\n    issues: other?.issues,\n    lang: config?.lang,\n    abortEarly: config?.abortEarly,\n    abortPipeEarly: config?.abortPipeEarly,\n    skipPipe: config?.skipPipe\n  };\n  issue.message = i18n(true, context, reference, config, issue);\n  return { typed: false, output: input, issues: [issue] };\n}\n\n// src/methods/getFallback/getFallback.ts\nfunction getFallback(schema, info) {\n  return typeof schema.fallback === \"function\" ? schema.fallback(info) : schema.fallback;\n}\n\n// src/methods/getFallback/getFallbackAsync.ts\nasync function getFallbackAsync(schema, info) {\n  return typeof schema.fallback === \"function\" ? await schema.fallback(info) : schema.fallback;\n}\n\n// src/methods/fallback/fallback.ts\nfunction fallback(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    _parse(input, config) {\n      const result = schema._parse(input, config);\n      return result.issues ? schemaResult(\n        true,\n        getFallback(this, { input, issues: result.issues })\n      ) : result;\n    }\n  };\n}\n\n// src/methods/fallback/fallbackAsync.ts\nfunction fallbackAsync(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    async _parse(input, config) {\n      const result = await schema._parse(input, config);\n      return result.issues ? schemaResult(\n        true,\n        await getFallbackAsync(this, { input, issues: result.issues })\n      ) : result;\n    }\n  };\n}\n\n// src/methods/forward/forward.ts\nfunction forward(validation, pathList) {\n  return {\n    ...validation,\n    _parse(input) {\n      const result = validation._parse(input);\n      if (result.issues) {\n        for (const issue of result.issues) {\n          let pathInput = input;\n          for (const key of pathList) {\n            const pathValue = pathInput[key];\n            issue.input = pathValue;\n            const pathItem = {\n              type: \"unknown\",\n              origin: \"value\",\n              input: pathInput,\n              key,\n              value: pathValue\n            };\n            issue.path ? issue.path.push(pathItem) : issue.path = [pathItem];\n            if (!pathValue) {\n              break;\n            }\n            pathInput = pathValue;\n          }\n        }\n      }\n      return result;\n    }\n  };\n}\n\n// src/methods/forward/forwardAsync.ts\nfunction forwardAsync(validation, pathList) {\n  return {\n    ...validation,\n    async _parse(input) {\n      const result = await validation._parse(input);\n      if (result.issues) {\n        for (const issue of result.issues) {\n          let pathInput = input;\n          for (const key of pathList) {\n            const pathValue = pathInput[key];\n            issue.input = pathValue;\n            const pathItem = {\n              type: \"unknown\",\n              origin: \"value\",\n              input: pathInput,\n              key,\n              value: pathValue\n            };\n            issue.path ? issue.path.push(pathItem) : issue.path = [pathItem];\n            if (!pathValue) {\n              break;\n            }\n            pathInput = pathValue;\n          }\n        }\n      }\n      return result;\n    }\n  };\n}\n\n// src/methods/getDefault/getDefault.ts\nfunction getDefault(schema) {\n  return typeof schema.default === \"function\" ? schema.default() : schema.default;\n}\n\n// src/methods/getDefault/getDefaultAsync.ts\nasync function getDefaultAsync(schema) {\n  return typeof schema.default === \"function\" ? await schema.default() : schema.default;\n}\n\n// src/methods/getDefaults/getDefaults.ts\nfunction getDefaults(schema) {\n  if (schema.default !== void 0) {\n    return getDefault(schema);\n  }\n  if (isOfType(\"object\", schema)) {\n    return Object.fromEntries(\n      Object.entries(schema.entries).map(([key, value2]) => [\n        key,\n        getDefaults(value2)\n      ])\n    );\n  }\n  if (isOfType(\"tuple\", schema)) {\n    return schema.items.map(getDefaults);\n  }\n  return void 0;\n}\n\n// src/methods/getDefaults/getDefaultsAsync.ts\nasync function getDefaultsAsync(schema) {\n  if (schema.default !== void 0) {\n    return getDefaultAsync(schema);\n  }\n  if (isOfType(\"object\", schema)) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getDefaultsAsync(value2)\n        ])\n      )\n    );\n  }\n  if (isOfType(\"tuple\", schema)) {\n    return Promise.all(\n      schema.items.map(getDefaultsAsync)\n    );\n  }\n  return void 0;\n}\n\n// src/methods/getFallbacks/getFallbacks.ts\nfunction getFallbacks(schema) {\n  if (schema.fallback !== void 0) {\n    return getFallback(schema);\n  }\n  if (isOfType(\"object\", schema)) {\n    return Object.fromEntries(\n      Object.entries(schema.entries).map(([key, value2]) => [\n        key,\n        getFallbacks(value2)\n      ])\n    );\n  }\n  if (isOfType(\"tuple\", schema)) {\n    return schema.items.map(getFallbacks);\n  }\n  return void 0;\n}\n\n// src/methods/getFallbacks/getFallbacksAsync.ts\nasync function getFallbacksAsync(schema) {\n  if (schema.fallback !== void 0) {\n    return getFallbackAsync(schema);\n  }\n  if (isOfType(\"object\", schema)) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getFallbacksAsync(value2)\n        ])\n      )\n    );\n  }\n  if (isOfType(\"tuple\", schema)) {\n    return Promise.all(\n      schema.items.map(getFallbacksAsync)\n    );\n  }\n  return void 0;\n}\n\n// src/methods/is/is.ts\nfunction is(schema, input, config) {\n  return !schema._parse(input, {\n    abortEarly: true,\n    skipPipe: getGlobalConfig(config)?.skipPipe\n  }).issues;\n}\n\n// src/schemas/any/any.ts\nfunction any(pipe) {\n  return {\n    type: \"any\",\n    expects: \"any\",\n    async: false,\n    pipe,\n    _parse(input, config) {\n      return pipeResult(this, input, config);\n    }\n  };\n}\n\n// src/schemas/any/anyAsync.ts\nfunction anyAsync(pipe) {\n  return {\n    type: \"any\",\n    expects: \"any\",\n    async: true,\n    pipe,\n    async _parse(input, config) {\n      return pipeResultAsync(this, input, config);\n    }\n  };\n}\n\n// src/schemas/array/array.ts\nfunction array(item, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"array\",\n    expects: \"Array\",\n    async: false,\n    item,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (Array.isArray(input)) {\n        let typed = true;\n        let issues;\n        const output = [];\n        for (let key = 0; key < input.length; key++) {\n          const value2 = input[key];\n          const result = this.item._parse(value2, config);\n          if (result.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of result.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              issues?.push(issue);\n            }\n            if (!issues) {\n              issues = result.issues;\n            }\n            if (config?.abortEarly) {\n              typed = false;\n              break;\n            }\n          }\n          if (!result.typed) {\n            typed = false;\n          }\n          output.push(result.output);\n        }\n        if (typed) {\n          return pipeResult(this, output, config, issues);\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, array, input, config);\n    }\n  };\n}\n\n// src/schemas/array/arrayAsync.ts\nfunction arrayAsync(item, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"array\",\n    expects: \"Array\",\n    async: true,\n    item,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (Array.isArray(input)) {\n        let typed = true;\n        let issues;\n        const output = [];\n        await Promise.all(\n          input.map(async (value2, key) => {\n            if (!(config?.abortEarly && issues)) {\n              const result = await this.item._parse(value2, config);\n              if (!(config?.abortEarly && issues)) {\n                if (result.issues) {\n                  const pathItem = {\n                    type: \"array\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  };\n                  for (const issue of result.issues) {\n                    if (issue.path) {\n                      issue.path.unshift(pathItem);\n                    } else {\n                      issue.path = [pathItem];\n                    }\n                    issues?.push(issue);\n                  }\n                  if (!issues) {\n                    issues = result.issues;\n                  }\n                  if (config?.abortEarly) {\n                    typed = false;\n                    throw null;\n                  }\n                }\n                if (!result.typed) {\n                  typed = false;\n                }\n                output[key] = result.output;\n              }\n            }\n          })\n        ).catch(() => null);\n        if (typed) {\n          return pipeResultAsync(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, arrayAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/bigint/bigint.ts\nfunction bigint(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"bigint\",\n    expects: \"bigint\",\n    async: false,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (typeof input === \"bigint\") {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, bigint, input, config);\n    }\n  };\n}\n\n// src/schemas/bigint/bigintAsync.ts\nfunction bigintAsync(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"bigint\",\n    expects: \"bigint\",\n    async: true,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (typeof input === \"bigint\") {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, bigintAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/blob/blob.ts\nfunction blob(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"blob\",\n    expects: \"Blob\",\n    async: false,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input instanceof Blob) {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, blob, input, config);\n    }\n  };\n}\n\n// src/schemas/blob/blobAsync.ts\nfunction blobAsync(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"blob\",\n    expects: \"Blob\",\n    async: true,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input instanceof Blob) {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, blobAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/boolean/boolean.ts\nfunction boolean(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"boolean\",\n    expects: \"boolean\",\n    async: false,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (typeof input === \"boolean\") {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, boolean, input, config);\n    }\n  };\n}\n\n// src/schemas/boolean/booleanAsync.ts\nfunction booleanAsync(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"boolean\",\n    expects: \"boolean\",\n    async: true,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (typeof input === \"boolean\") {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, booleanAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/date/date.ts\nfunction date(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"date\",\n    expects: \"Date\",\n    async: false,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input instanceof Date && !isNaN(input.getTime())) {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, date, input, config);\n    }\n  };\n}\n\n// src/schemas/date/dateAsync.ts\nfunction dateAsync(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"date\",\n    expects: \"Date\",\n    async: true,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input instanceof Date && !isNaN(input.getTime())) {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, dateAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/enum/enum.ts\nfunction enum_(enum__, message) {\n  const values = Object.values(enum__);\n  return {\n    type: \"enum\",\n    expects: values.map(stringify).join(\" | \"),\n    async: false,\n    enum: enum__,\n    message,\n    _parse(input, config) {\n      if (values.includes(input)) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, enum_, input, config);\n    }\n  };\n}\n\n// src/schemas/enum/enumAsync.ts\nfunction enumAsync(enum_2, message) {\n  const values = Object.values(enum_2);\n  return {\n    type: \"enum\",\n    expects: values.map(stringify).join(\" | \"),\n    async: true,\n    enum: enum_2,\n    message,\n    async _parse(input, config) {\n      if (values.includes(input)) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, enumAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/instance/instance.ts\nfunction instance(class_, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"instance\",\n    expects: class_.name,\n    async: false,\n    class: class_,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input instanceof this.class) {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, instance, input, config);\n    }\n  };\n}\n\n// src/schemas/instance/instanceAsync.ts\nfunction instanceAsync(class_, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"instance\",\n    expects: class_.name,\n    async: true,\n    class: class_,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input instanceof this.class) {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, instanceAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/intersect/utils/mergeOutputs/mergeOutputs.ts\nfunction mergeOutputs(output1, output2) {\n  if (typeof output1 === typeof output2) {\n    if (output1 === output2 || output1 instanceof Date && output2 instanceof Date && +output1 === +output2) {\n      return { output: output1 };\n    }\n    if (Array.isArray(output1) && Array.isArray(output2)) {\n      if (output1.length === output2.length) {\n        const array2 = [];\n        for (let index = 0; index < output1.length; index++) {\n          const result = mergeOutputs(output1[index], output2[index]);\n          if (result.invalid) {\n            return result;\n          }\n          array2.push(result.output);\n        }\n        return { output: array2 };\n      }\n      return { invalid: true };\n    }\n    if (output1 && output2 && output1.constructor === Object && output2.constructor === Object) {\n      const object2 = { ...output1, ...output2 };\n      for (const key in output1) {\n        if (key in output2) {\n          const result = mergeOutputs(output1[key], output2[key]);\n          if (result.invalid) {\n            return result;\n          }\n          object2[key] = result.output;\n        }\n      }\n      return { output: object2 };\n    }\n  }\n  return { invalid: true };\n}\n\n// src/schemas/intersect/intersect.ts\nfunction intersect(options, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"intersect\",\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \"),\n    async: false,\n    options,\n    message,\n    pipe,\n    _parse(input, config) {\n      let typed = true;\n      let issues;\n      let output;\n      const outputs = [];\n      for (const schema of this.options) {\n        const result = schema._parse(input, config);\n        if (result.issues) {\n          if (issues) {\n            for (const issue of result.issues) {\n              issues.push(issue);\n            }\n          } else {\n            issues = result.issues;\n          }\n          if (config?.abortEarly) {\n            typed = false;\n            break;\n          }\n        }\n        if (!result.typed) {\n          typed = false;\n        }\n        outputs.push(result.output);\n      }\n      if (typed) {\n        output = outputs[0];\n        for (let index = 1; index < outputs.length; index++) {\n          const result = mergeOutputs(output, outputs[index]);\n          if (result.invalid) {\n            return schemaIssue(this, intersect, input, config);\n          }\n          output = result.output;\n        }\n        return pipeResult(this, output, config, issues);\n      }\n      return schemaResult(false, output, issues);\n    }\n  };\n}\n\n// src/schemas/intersect/intersectAsync.ts\nfunction intersectAsync(options, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"intersect\",\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \"),\n    async: true,\n    options,\n    message,\n    pipe,\n    async _parse(input, config) {\n      let typed = true;\n      let issues;\n      let output;\n      const outputs = [];\n      await Promise.all(\n        this.options.map(async (schema) => {\n          if (!(config?.abortEarly && issues)) {\n            const result = await schema._parse(input, config);\n            if (!(config?.abortEarly && issues)) {\n              if (result.issues) {\n                if (issues) {\n                  for (const issue of result.issues) {\n                    issues.push(issue);\n                  }\n                } else {\n                  issues = result.issues;\n                }\n                if (config?.abortEarly) {\n                  typed = false;\n                  throw null;\n                }\n              }\n              if (!result.typed) {\n                typed = false;\n              }\n              outputs.push(result.output);\n            }\n          }\n        })\n      ).catch(() => null);\n      if (typed) {\n        output = outputs[0];\n        for (let index = 1; index < outputs.length; index++) {\n          const result = mergeOutputs(output, outputs[index]);\n          if (result.invalid) {\n            return schemaIssue(this, intersectAsync, input, config);\n          }\n          output = result.output;\n        }\n        return pipeResultAsync(this, output, config, issues);\n      }\n      return schemaResult(false, output, issues);\n    }\n  };\n}\n\n// src/schemas/lazy/lazy.ts\nfunction lazy(getter) {\n  return {\n    type: \"lazy\",\n    expects: \"unknown\",\n    async: false,\n    getter,\n    _parse(input, config) {\n      return this.getter(input)._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/lazy/lazyAsync.ts\nfunction lazyAsync(getter) {\n  return {\n    type: \"lazy\",\n    expects: \"unknown\",\n    async: true,\n    getter,\n    async _parse(input, config) {\n      return (await this.getter(input))._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/literal/literal.ts\nfunction literal(literal_, message) {\n  return {\n    type: \"literal\",\n    expects: stringify(literal_),\n    async: false,\n    literal: literal_,\n    message,\n    _parse(input, config) {\n      if (input === this.literal) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, literal, input, config);\n    }\n  };\n}\n\n// src/schemas/literal/literalAsync.ts\nfunction literalAsync(literal2, message) {\n  return {\n    type: \"literal\",\n    expects: stringify(literal2),\n    async: true,\n    literal: literal2,\n    message,\n    async _parse(input, config) {\n      if (input === this.literal) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, literalAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/map/map.ts\nfunction map(key, value2, arg3, arg4) {\n  const [message, pipe] = defaultArgs(arg3, arg4);\n  return {\n    type: \"map\",\n    expects: \"Map\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input instanceof Map) {\n        let typed = true;\n        let issues;\n        const output = /* @__PURE__ */ new Map();\n        for (const [inputKey, inputValue] of input.entries()) {\n          let pathItem;\n          const keyResult = this.key._parse(inputKey, config);\n          if (keyResult.issues) {\n            pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyResult.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              issues?.push(issue);\n            }\n            if (!issues) {\n              issues = keyResult.issues;\n            }\n            if (config?.abortEarly) {\n              typed = false;\n              break;\n            }\n          }\n          const valueResult = this.value._parse(inputValue, config);\n          if (valueResult.issues) {\n            pathItem = pathItem ?? {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueResult.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              issues?.push(issue);\n            }\n            if (!issues) {\n              issues = valueResult.issues;\n            }\n            if (config?.abortEarly) {\n              typed = false;\n              break;\n            }\n          }\n          if (!keyResult.typed || !valueResult.typed) {\n            typed = false;\n          }\n          output.set(keyResult.output, valueResult.output);\n        }\n        if (typed) {\n          return pipeResult(this, output, config, issues);\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, map, input, config);\n    }\n  };\n}\n\n// src/schemas/map/mapAsync.ts\nfunction mapAsync(key, value2, arg3, arg4) {\n  const [message, pipe] = defaultArgs(arg3, arg4);\n  return {\n    type: \"map\",\n    expects: \"Map\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input instanceof Map) {\n        let typed = true;\n        let issues;\n        const output = /* @__PURE__ */ new Map();\n        await Promise.all(\n          Array.from(input.entries()).map(async ([inputKey, inputValue]) => {\n            let pathItem;\n            const [keyResult, valueResult] = await Promise.all(\n              [\n                { schema: this.key, value: inputKey, origin: \"key\" },\n                { schema: this.value, value: inputValue, origin: \"value\" }\n              ].map(async ({ schema, value: value3, origin }) => {\n                if (!(config?.abortEarly && issues)) {\n                  const result = await schema._parse(value3, config);\n                  if (!(config?.abortEarly && issues)) {\n                    if (result.issues) {\n                      pathItem = pathItem ?? {\n                        type: \"map\",\n                        origin,\n                        input,\n                        key: inputKey,\n                        value: inputValue\n                      };\n                      for (const issue of result.issues) {\n                        if (issue.path) {\n                          issue.path.unshift(pathItem);\n                        } else {\n                          issue.path = [pathItem];\n                        }\n                        issues?.push(issue);\n                      }\n                      if (!issues) {\n                        issues = result.issues;\n                      }\n                      if (config?.abortEarly) {\n                        throw null;\n                      }\n                    }\n                    return result;\n                  }\n                }\n              })\n            ).catch(() => []);\n            if (!keyResult?.typed || !valueResult?.typed) {\n              typed = false;\n            }\n            if (keyResult && valueResult) {\n              output.set(keyResult.output, valueResult.output);\n            }\n          })\n        );\n        if (typed) {\n          return pipeResultAsync(this, output, config, issues);\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, mapAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/nan/nan.ts\nfunction nan(message) {\n  return {\n    type: \"nan\",\n    expects: \"NaN\",\n    async: false,\n    message,\n    _parse(input, config) {\n      if (Number.isNaN(input)) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, nan, input, config);\n    }\n  };\n}\n\n// src/schemas/nan/nanAsync.ts\nfunction nanAsync(message) {\n  return {\n    type: \"nan\",\n    expects: \"NaN\",\n    async: true,\n    message,\n    async _parse(input, config) {\n      if (Number.isNaN(input)) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, nanAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/never/never.ts\nfunction never(message) {\n  return {\n    type: \"never\",\n    expects: \"never\",\n    async: false,\n    message,\n    _parse(input, config) {\n      return schemaIssue(this, never, input, config);\n    }\n  };\n}\n\n// src/schemas/never/neverAsync.ts\nfunction neverAsync(message) {\n  return {\n    type: \"never\",\n    expects: \"never\",\n    async: true,\n    message,\n    async _parse(input, config) {\n      return schemaIssue(this, neverAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullable.ts\nfunction nonNullable(wrapped, message) {\n  return {\n    type: \"non_nullable\",\n    expects: \"!null\",\n    async: false,\n    wrapped,\n    message,\n    _parse(input, config) {\n      if (input === null) {\n        return schemaIssue(this, nonNullable, input, config);\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullableAsync.ts\nfunction nonNullableAsync(wrapped, message) {\n  return {\n    type: \"non_nullable\",\n    expects: \"!null\",\n    async: true,\n    wrapped,\n    message,\n    async _parse(input, config) {\n      if (input === null) {\n        return schemaIssue(this, nonNullableAsync, input, config);\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullish.ts\nfunction nonNullish(wrapped, message) {\n  return {\n    type: \"non_nullish\",\n    expects: \"!null & !undefined\",\n    async: false,\n    wrapped,\n    message,\n    _parse(input, config) {\n      if (input === null || input === void 0) {\n        return schemaIssue(this, nonNullish, input, config);\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullishAsync.ts\nfunction nonNullishAsync(wrapped, message) {\n  return {\n    type: \"non_nullish\",\n    expects: \"!null & !undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _parse(input, config) {\n      if (input === null || input === void 0) {\n        return schemaIssue(this, nonNullishAsync, input, config);\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptional.ts\nfunction nonOptional(wrapped, message) {\n  return {\n    type: \"non_optional\",\n    expects: \"!undefined\",\n    async: false,\n    wrapped,\n    message,\n    _parse(input, config) {\n      if (input === void 0) {\n        return schemaIssue(this, nonOptional, input, config);\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptionalAsync.ts\nfunction nonOptionalAsync(wrapped, message) {\n  return {\n    type: \"non_optional\",\n    expects: \"!undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _parse(input, config) {\n      if (input === void 0) {\n        return schemaIssue(this, nonOptionalAsync, input, config);\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nullable/nullable.ts\nfunction nullable(wrapped, default_) {\n  return {\n    type: \"nullable\",\n    expects: `${wrapped.expects} | null`,\n    async: false,\n    wrapped,\n    default: default_,\n    _parse(input, config) {\n      if (input === null) {\n        const override = getDefault(this);\n        if (override === void 0) {\n          return schemaResult(true, input);\n        }\n        input = override;\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nullable/nullableAsync.ts\nfunction nullableAsync(wrapped, default_) {\n  return {\n    type: \"nullable\",\n    expects: `${wrapped.expects} | null`,\n    async: true,\n    wrapped,\n    default: default_,\n    async _parse(input, config) {\n      if (input === null) {\n        const override = await getDefaultAsync(this);\n        if (override === void 0) {\n          return schemaResult(true, input);\n        }\n        input = override;\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nullish/nullish.ts\nfunction nullish(wrapped, default_) {\n  return {\n    type: \"nullish\",\n    expects: `${wrapped.expects} | null | undefined`,\n    async: false,\n    wrapped,\n    default: default_,\n    _parse(input, config) {\n      if (input === null || input === void 0) {\n        const override = getDefault(this);\n        if (override === void 0) {\n          return schemaResult(true, input);\n        }\n        input = override;\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/nullish/nullishAsync.ts\nfunction nullishAsync(wrapped, default_) {\n  return {\n    type: \"nullish\",\n    expects: `${wrapped.expects} | null | undefined`,\n    async: true,\n    wrapped,\n    default: default_,\n    async _parse(input, config) {\n      if (input === null || input === void 0) {\n        const override = await getDefaultAsync(this);\n        if (override === void 0) {\n          return schemaResult(true, input);\n        }\n        input = override;\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/null/null.ts\nfunction null_(message) {\n  return {\n    type: \"null\",\n    expects: \"null\",\n    async: false,\n    message,\n    _parse(input, config) {\n      if (input === null) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, null_, input, config);\n    }\n  };\n}\n\n// src/schemas/null/nullAsync.ts\nfunction nullAsync(message) {\n  return {\n    type: \"null\",\n    expects: \"null\",\n    async: true,\n    message,\n    async _parse(input, config) {\n      if (input === null) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, nullAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/number/number.ts\nfunction number(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"number\",\n    expects: \"number\",\n    async: false,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (typeof input === \"number\" && !isNaN(input)) {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, number, input, config);\n    }\n  };\n}\n\n// src/schemas/number/numberAsync.ts\nfunction numberAsync(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"number\",\n    expects: \"number\",\n    async: true,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (typeof input === \"number\" && !isNaN(input)) {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, numberAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/object/object.ts\nfunction object(entries, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  let cachedEntries;\n  return {\n    type: \"object\",\n    expects: \"Object\",\n    async: false,\n    entries,\n    rest,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input && typeof input === \"object\") {\n        cachedEntries = cachedEntries ?? Object.entries(this.entries);\n        let typed = true;\n        let issues;\n        const output = {};\n        for (const [key, schema] of cachedEntries) {\n          const value2 = input[key];\n          const result = schema._parse(value2, config);\n          if (result.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of result.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              issues?.push(issue);\n            }\n            if (!issues) {\n              issues = result.issues;\n            }\n            if (config?.abortEarly) {\n              typed = false;\n              break;\n            }\n          }\n          if (!result.typed) {\n            typed = false;\n          }\n          if (result.output !== void 0 || key in input) {\n            output[key] = result.output;\n          }\n        }\n        if (this.rest && !(config?.abortEarly && issues)) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              const result = this.rest._parse(value2, config);\n              if (result.issues) {\n                const pathItem = {\n                  type: \"object\",\n                  origin: \"value\",\n                  input,\n                  key,\n                  value: value2\n                };\n                for (const issue of result.issues) {\n                  if (issue.path) {\n                    issue.path.unshift(pathItem);\n                  } else {\n                    issue.path = [pathItem];\n                  }\n                  issues?.push(issue);\n                }\n                if (!issues) {\n                  issues = result.issues;\n                }\n                if (config?.abortEarly) {\n                  typed = false;\n                  break;\n                }\n              }\n              if (!result.typed) {\n                typed = false;\n              }\n              output[key] = result.output;\n            }\n          }\n        }\n        if (typed) {\n          return pipeResult(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, object, input, config);\n    }\n  };\n}\n\n// src/schemas/object/objectAsync.ts\nfunction objectAsync(entries, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  let cachedEntries;\n  return {\n    type: \"object\",\n    expects: \"Object\",\n    async: true,\n    entries,\n    rest,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input && typeof input === \"object\") {\n        cachedEntries = cachedEntries ?? Object.entries(this.entries);\n        let typed = true;\n        let issues;\n        const output = {};\n        await Promise.all([\n          Promise.all(\n            cachedEntries.map(async ([key, schema]) => {\n              if (!(config?.abortEarly && issues)) {\n                const value2 = input[key];\n                const result = await schema._parse(value2, config);\n                if (!(config?.abortEarly && issues)) {\n                  if (result.issues) {\n                    const pathItem = {\n                      type: \"object\",\n                      origin: \"value\",\n                      input,\n                      key,\n                      value: value2\n                    };\n                    for (const issue of result.issues) {\n                      if (issue.path) {\n                        issue.path.unshift(pathItem);\n                      } else {\n                        issue.path = [pathItem];\n                      }\n                      issues?.push(issue);\n                    }\n                    if (!issues) {\n                      issues = result.issues;\n                    }\n                    if (config?.abortEarly) {\n                      typed = false;\n                      throw null;\n                    }\n                  }\n                  if (!result.typed) {\n                    typed = false;\n                  }\n                  if (result.output !== void 0 || key in input) {\n                    output[key] = result.output;\n                  }\n                }\n              }\n            })\n          ),\n          this.rest && Promise.all(\n            Object.entries(input).map(async ([key, value2]) => {\n              if (!(config?.abortEarly && issues)) {\n                if (!(key in this.entries)) {\n                  const result = await this.rest._parse(value2, config);\n                  if (!(config?.abortEarly && issues)) {\n                    if (result.issues) {\n                      const pathItem = {\n                        type: \"object\",\n                        origin: \"value\",\n                        input,\n                        key,\n                        value: value2\n                      };\n                      for (const issue of result.issues) {\n                        if (issue.path) {\n                          issue.path.unshift(pathItem);\n                        } else {\n                          issue.path = [pathItem];\n                        }\n                        issues?.push(issue);\n                      }\n                      if (!issues) {\n                        issues = result.issues;\n                      }\n                      if (config?.abortEarly) {\n                        typed = false;\n                        throw null;\n                      }\n                    }\n                    if (!result.typed) {\n                      typed = false;\n                    }\n                    output[key] = result.output;\n                  }\n                }\n              }\n            })\n          )\n        ]).catch(() => null);\n        if (typed) {\n          return pipeResultAsync(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, objectAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/optional/optional.ts\nfunction optional(wrapped, default_) {\n  return {\n    type: \"optional\",\n    expects: `${wrapped.expects} | undefined`,\n    async: false,\n    wrapped,\n    default: default_,\n    _parse(input, config) {\n      if (input === void 0) {\n        const override = getDefault(this);\n        if (override === void 0) {\n          return schemaResult(true, input);\n        }\n        input = override;\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/optional/optionalAsync.ts\nfunction optionalAsync(wrapped, default_) {\n  return {\n    type: \"optional\",\n    expects: `${wrapped.expects} | undefined`,\n    async: true,\n    wrapped,\n    default: default_,\n    async _parse(input, config) {\n      if (input === void 0) {\n        const override = await getDefaultAsync(this);\n        if (override === void 0) {\n          return schemaResult(true, input);\n        }\n        input = override;\n      }\n      return this.wrapped._parse(input, config);\n    }\n  };\n}\n\n// src/schemas/picklist/picklist.ts\nfunction picklist(options, message) {\n  return {\n    type: \"picklist\",\n    expects: options.map(stringify).join(\" | \"),\n    async: false,\n    options,\n    message,\n    _parse(input, config) {\n      if (this.options.includes(input)) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, picklist, input, config);\n    }\n  };\n}\n\n// src/schemas/picklist/picklistAsync.ts\nfunction picklistAsync(options, message) {\n  return {\n    type: \"picklist\",\n    expects: options.map(stringify).join(\" | \"),\n    async: true,\n    options,\n    message,\n    async _parse(input, config) {\n      if (this.options.includes(input)) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, picklistAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/string/string.ts\nfunction string(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"string\",\n    expects: \"string\",\n    async: false,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (typeof input === \"string\") {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, string, input, config);\n    }\n  };\n}\n\n// src/schemas/string/stringAsync.ts\nfunction stringAsync(arg1, arg2) {\n  const [message, pipe] = defaultArgs(arg1, arg2);\n  return {\n    type: \"string\",\n    expects: \"string\",\n    async: true,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (typeof input === \"string\") {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, stringAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/record/utils/recordArgs/recordArgs.ts\nfunction recordArgs(arg1, arg2, arg3, arg4) {\n  if (typeof arg2 === \"object\" && !Array.isArray(arg2)) {\n    const [message2, pipe2] = defaultArgs(arg3, arg4);\n    return [arg1, arg2, message2, pipe2];\n  }\n  const [message, pipe] = defaultArgs(\n    arg2,\n    arg3\n  );\n  return [string(), arg1, message, pipe];\n}\n\n// src/schemas/record/values.ts\nvar BLOCKED_KEYS = [\"__proto__\", \"prototype\", \"constructor\"];\n\n// src/schemas/record/record.ts\nfunction record(arg1, arg2, arg3, arg4) {\n  const [key, value2, message, pipe] = recordArgs(arg1, arg2, arg3, arg4);\n  return {\n    type: \"record\",\n    expects: \"Object\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input && typeof input === \"object\") {\n        let typed = true;\n        let issues;\n        const output = {};\n        for (const [inputKey, inputValue] of Object.entries(input)) {\n          if (!BLOCKED_KEYS.includes(inputKey)) {\n            let pathItem;\n            const keyResult = this.key._parse(inputKey, config);\n            if (keyResult.issues) {\n              pathItem = {\n                type: \"record\",\n                origin: \"key\",\n                input,\n                key: inputKey,\n                value: inputValue\n              };\n              for (const issue of keyResult.issues) {\n                issue.path = [pathItem];\n                issues?.push(issue);\n              }\n              if (!issues) {\n                issues = keyResult.issues;\n              }\n              if (config?.abortEarly) {\n                typed = false;\n                break;\n              }\n            }\n            const valueResult = this.value._parse(inputValue, config);\n            if (valueResult.issues) {\n              pathItem = pathItem ?? {\n                type: \"record\",\n                origin: \"value\",\n                input,\n                key: inputKey,\n                value: inputValue\n              };\n              for (const issue of valueResult.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                issues?.push(issue);\n              }\n              if (!issues) {\n                issues = valueResult.issues;\n              }\n              if (config?.abortEarly) {\n                typed = false;\n                break;\n              }\n            }\n            if (!keyResult.typed || !valueResult.typed) {\n              typed = false;\n            }\n            if (keyResult.typed) {\n              output[keyResult.output] = valueResult.output;\n            }\n          }\n        }\n        if (typed) {\n          return pipeResult(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, record, input, config);\n    }\n  };\n}\n\n// src/schemas/record/recordAsync.ts\nfunction recordAsync(arg1, arg2, arg3, arg4) {\n  const [key, value2, message, pipe] = recordArgs(arg1, arg2, arg3, arg4);\n  return {\n    type: \"record\",\n    expects: \"Object\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input && typeof input === \"object\") {\n        let typed = true;\n        let issues;\n        const output = {};\n        await Promise.all(\n          // Note: `Object.entries(...)` converts each key to a string\n          Object.entries(input).map(async ([inputKey, inputValue]) => {\n            if (!BLOCKED_KEYS.includes(inputKey)) {\n              let pathItem;\n              const [keyResult, valueResult] = await Promise.all(\n                [\n                  { schema: this.key, value: inputKey, origin: \"key\" },\n                  { schema: this.value, value: inputValue, origin: \"value\" }\n                ].map(async ({ schema, value: value3, origin }) => {\n                  if (!(config?.abortEarly && issues)) {\n                    const result = await schema._parse(value3, config);\n                    if (!(config?.abortEarly && issues)) {\n                      if (result.issues) {\n                        pathItem = pathItem ?? {\n                          type: \"record\",\n                          origin,\n                          input,\n                          key: inputKey,\n                          value: inputValue\n                        };\n                        for (const issue of result.issues) {\n                          if (issue.path) {\n                            issue.path.unshift(pathItem);\n                          } else {\n                            issue.path = [pathItem];\n                          }\n                          issues?.push(issue);\n                        }\n                        if (!issues) {\n                          issues = result.issues;\n                        }\n                        if (config?.abortEarly) {\n                          throw null;\n                        }\n                      }\n                      return result;\n                    }\n                  }\n                })\n              ).catch(() => []);\n              if (!keyResult?.typed || !valueResult?.typed) {\n                typed = false;\n              }\n              if (keyResult?.typed && valueResult) {\n                output[keyResult.output] = valueResult.output;\n              }\n            }\n          })\n        );\n        if (typed) {\n          return pipeResultAsync(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, recordAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/set/set.ts\nfunction set(value2, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"set\",\n    expects: \"Set\",\n    async: false,\n    value: value2,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input instanceof Set) {\n        let key = 0;\n        let typed = true;\n        let issues;\n        const output = /* @__PURE__ */ new Set();\n        for (const inputValue of input) {\n          const result = this.value._parse(inputValue, config);\n          if (result.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              key,\n              value: inputValue\n            };\n            for (const issue of result.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              issues?.push(issue);\n            }\n            if (!issues) {\n              issues = result.issues;\n            }\n            if (config?.abortEarly) {\n              typed = false;\n              break;\n            }\n          }\n          if (!result.typed) {\n            typed = false;\n          }\n          output.add(result.output);\n          key++;\n        }\n        if (typed) {\n          return pipeResult(this, output, config, issues);\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, set, input, config);\n    }\n  };\n}\n\n// src/schemas/set/setAsync.ts\nfunction setAsync(value2, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"set\",\n    expects: \"Set\",\n    async: true,\n    value: value2,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input instanceof Set) {\n        let typed = true;\n        let issues;\n        const output = /* @__PURE__ */ new Set();\n        await Promise.all(\n          Array.from(input.values()).map(async (inputValue, key) => {\n            if (!(config?.abortEarly && issues)) {\n              const result = await this.value._parse(inputValue, config);\n              if (!(config?.abortEarly && issues)) {\n                if (result.issues) {\n                  const pathItem = {\n                    type: \"set\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: inputValue\n                  };\n                  for (const issue of result.issues) {\n                    if (issue.path) {\n                      issue.path.unshift(pathItem);\n                    } else {\n                      issue.path = [pathItem];\n                    }\n                    issues?.push(issue);\n                  }\n                  if (!issues) {\n                    issues = result.issues;\n                  }\n                  if (config?.abortEarly) {\n                    typed = false;\n                    throw null;\n                  }\n                }\n                if (!result.typed) {\n                  typed = false;\n                }\n                output.add(result.output);\n              }\n            }\n          })\n        ).catch(() => null);\n        if (typed) {\n          return pipeResultAsync(this, output, config, issues);\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, setAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/special/special.ts\nfunction special(check, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"special\",\n    expects: \"unknown\",\n    async: false,\n    check,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (this.check(input)) {\n        return pipeResult(this, input, config);\n      }\n      return schemaIssue(this, special, input, config);\n    }\n  };\n}\n\n// src/schemas/special/specialAsync.ts\nfunction specialAsync(check, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"special\",\n    expects: \"unknown\",\n    async: true,\n    check,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (await this.check(input)) {\n        return pipeResultAsync(this, input, config);\n      }\n      return schemaIssue(this, specialAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/symbol/symbol.ts\nfunction symbol(message) {\n  return {\n    type: \"symbol\",\n    expects: \"symbol\",\n    async: false,\n    message,\n    _parse(input, config) {\n      if (typeof input === \"symbol\") {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, symbol, input, config);\n    }\n  };\n}\n\n// src/schemas/symbol/symbolAsync.ts\nfunction symbolAsync(message) {\n  return {\n    type: \"symbol\",\n    expects: \"symbol\",\n    async: true,\n    message,\n    async _parse(input, config) {\n      if (typeof input === \"symbol\") {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, symbolAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/tuple/tuple.ts\nfunction tuple(items, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return {\n    type: \"tuple\",\n    expects: \"Array\",\n    async: false,\n    items,\n    rest,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (Array.isArray(input)) {\n        let typed = true;\n        let issues;\n        const output = [];\n        for (let key = 0; key < this.items.length; key++) {\n          const value2 = input[key];\n          const result = this.items[key]._parse(value2, config);\n          if (result.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of result.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              issues?.push(issue);\n            }\n            if (!issues) {\n              issues = result.issues;\n            }\n            if (config?.abortEarly) {\n              typed = false;\n              break;\n            }\n          }\n          if (!result.typed) {\n            typed = false;\n          }\n          output[key] = result.output;\n        }\n        if (this.rest && !(config?.abortEarly && issues)) {\n          for (let key = this.items.length; key < input.length; key++) {\n            const value2 = input[key];\n            const result = this.rest._parse(value2, config);\n            if (result.issues) {\n              const pathItem = {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of result.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                issues?.push(issue);\n              }\n              if (!issues) {\n                issues = result.issues;\n              }\n              if (config?.abortEarly) {\n                typed = false;\n                break;\n              }\n            }\n            if (!result.typed) {\n              typed = false;\n            }\n            output[key] = result.output;\n          }\n        }\n        if (typed) {\n          return pipeResult(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, tuple, input, config);\n    }\n  };\n}\n\n// src/schemas/tuple/tupleAsync.ts\nfunction tupleAsync(items, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return {\n    type: \"tuple\",\n    expects: \"Array\",\n    async: true,\n    items,\n    rest,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (Array.isArray(input)) {\n        let typed = true;\n        let issues;\n        const output = [];\n        await Promise.all([\n          // Parse schema of each tuple item\n          Promise.all(\n            this.items.map(async (schema, key) => {\n              if (!(config?.abortEarly && issues)) {\n                const value2 = input[key];\n                const result = await schema._parse(value2, config);\n                if (!(config?.abortEarly && issues)) {\n                  if (result.issues) {\n                    const pathItem = {\n                      type: \"tuple\",\n                      origin: \"value\",\n                      input,\n                      key,\n                      value: value2\n                    };\n                    for (const issue of result.issues) {\n                      if (issue.path) {\n                        issue.path.unshift(pathItem);\n                      } else {\n                        issue.path = [pathItem];\n                      }\n                      issues?.push(issue);\n                    }\n                    if (!issues) {\n                      issues = result.issues;\n                    }\n                    if (config?.abortEarly) {\n                      typed = false;\n                      throw null;\n                    }\n                  }\n                  if (!result.typed) {\n                    typed = false;\n                  }\n                  output[key] = result.output;\n                }\n              }\n            })\n          ),\n          // If necessary parse schema of each rest item\n          this.rest && Promise.all(\n            input.slice(this.items.length).map(async (value2, index) => {\n              if (!(config?.abortEarly && issues)) {\n                const key = this.items.length + index;\n                const result = await this.rest._parse(value2, config);\n                if (!(config?.abortEarly && issues)) {\n                  if (result.issues) {\n                    const pathItem = {\n                      type: \"tuple\",\n                      origin: \"value\",\n                      input,\n                      key,\n                      value: value2\n                    };\n                    for (const issue of result.issues) {\n                      if (issue.path) {\n                        issue.path.unshift(pathItem);\n                      } else {\n                        issue.path = [pathItem];\n                      }\n                      issues?.push(issue);\n                    }\n                    if (!issues) {\n                      issues = result.issues;\n                    }\n                    if (config?.abortEarly) {\n                      typed = false;\n                      throw null;\n                    }\n                  }\n                  if (!result.typed) {\n                    typed = false;\n                  }\n                  output[key] = result.output;\n                }\n              }\n            })\n          )\n        ]).catch(() => null);\n        if (typed) {\n          return pipeResultAsync(\n            this,\n            output,\n            config,\n            issues\n          );\n        }\n        return schemaResult(false, output, issues);\n      }\n      return schemaIssue(this, tupleAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/undefined/undefined.ts\nfunction undefined_(message) {\n  return {\n    type: \"undefined\",\n    expects: \"undefined\",\n    async: false,\n    message,\n    _parse(input, config) {\n      if (input === void 0) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, undefined_, input, config);\n    }\n  };\n}\n\n// src/schemas/undefined/undefinedAsync.ts\nfunction undefinedAsync(message) {\n  return {\n    type: \"undefined\",\n    expects: \"undefined\",\n    async: true,\n    message,\n    async _parse(input, config) {\n      if (input === void 0) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, undefinedAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/union/utils/subissues/subissues.ts\nfunction subissues(results) {\n  let issues;\n  if (results) {\n    for (const result of results) {\n      if (issues) {\n        for (const issue of result.issues) {\n          issues.push(issue);\n        }\n      } else {\n        issues = result.issues;\n      }\n    }\n  }\n  return issues;\n}\n\n// src/schemas/union/union.ts\nfunction union(options, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"union\",\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \"),\n    async: false,\n    options,\n    message,\n    pipe,\n    _parse(input, config) {\n      let validResult;\n      let untypedResults;\n      let typedResults;\n      for (const schema of this.options) {\n        const result = schema._parse(input, config);\n        if (result.typed) {\n          if (!result.issues) {\n            validResult = result;\n            break;\n          } else {\n            typedResults ? typedResults.push(result) : typedResults = [result];\n          }\n        } else {\n          untypedResults ? untypedResults.push(result) : untypedResults = [result];\n        }\n      }\n      if (validResult) {\n        return pipeResult(this, validResult.output, config);\n      }\n      if (typedResults?.length) {\n        const firstResult = typedResults[0];\n        return pipeResult(\n          this,\n          firstResult.output,\n          config,\n          // Hint: If there is more than one typed result, we use a general\n          // union issue with subissues because the issues could contradict\n          // each other.\n          typedResults.length === 1 ? firstResult.issues : schemaIssue(this, union, input, config, {\n            reason: \"union\",\n            issues: subissues(typedResults)\n          }).issues\n        );\n      }\n      if (untypedResults?.length === 1) {\n        return untypedResults[0];\n      }\n      return schemaIssue(this, union, input, config, {\n        issues: subissues(untypedResults)\n      });\n    }\n  };\n}\n\n// src/schemas/union/unionAsync.ts\nfunction unionAsync(options, arg2, arg3) {\n  const [message, pipe] = defaultArgs(arg2, arg3);\n  return {\n    type: \"union\",\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \"),\n    async: true,\n    options,\n    message,\n    pipe,\n    async _parse(input, config) {\n      let validResult;\n      let untypedResults;\n      let typedResults;\n      for (const schema of this.options) {\n        const result = await schema._parse(input, config);\n        if (result.typed) {\n          if (!result.issues) {\n            validResult = result;\n            break;\n          } else {\n            typedResults ? typedResults.push(result) : typedResults = [result];\n          }\n        } else {\n          untypedResults ? untypedResults.push(result) : untypedResults = [result];\n        }\n      }\n      if (validResult) {\n        return pipeResultAsync(this, validResult.output, config);\n      }\n      if (typedResults?.length) {\n        const firstResult = typedResults[0];\n        return pipeResultAsync(\n          this,\n          firstResult.output,\n          config,\n          // Hint: If there is more than one typed result, we use a general\n          // union issue with subissues because the issues could contradict\n          // each other.\n          typedResults.length === 1 ? firstResult.issues : schemaIssue(this, unionAsync, input, config, {\n            reason: \"union\",\n            issues: subissues(typedResults)\n          }).issues\n        );\n      }\n      if (untypedResults?.length === 1) {\n        return untypedResults[0];\n      }\n      return schemaIssue(this, unionAsync, input, config, {\n        issues: subissues(untypedResults)\n      });\n    }\n  };\n}\n\n// src/schemas/unknown/unknown.ts\nfunction unknown(pipe) {\n  return {\n    type: \"unknown\",\n    expects: \"unknown\",\n    async: false,\n    pipe,\n    _parse(input, config) {\n      return pipeResult(this, input, config);\n    }\n  };\n}\n\n// src/schemas/unknown/unknownAsync.ts\nfunction unknownAsync(pipe) {\n  return {\n    type: \"unknown\",\n    expects: \"unknown\",\n    async: true,\n    pipe,\n    async _parse(input, config) {\n      return pipeResultAsync(this, input, config);\n    }\n  };\n}\n\n// src/schemas/variant/variant.ts\nfunction variant(key, options, arg3, arg4) {\n  const [message, pipe] = defaultArgs(arg3, arg4);\n  let cachedExpectedKey;\n  return {\n    type: \"variant\",\n    expects: \"Object\",\n    async: false,\n    key,\n    options,\n    message,\n    pipe,\n    _parse(input, config) {\n      if (input && typeof input === \"object\") {\n        if (this.key in input || !cachedExpectedKey) {\n          let expectedKey;\n          let variantResult;\n          const parseOptions = (options2) => {\n            for (const schema of options2) {\n              if (schema.type === \"object\") {\n                const keySchema = schema.entries[this.key];\n                const keyResult = keySchema._parse(\n                  input[this.key],\n                  config\n                );\n                if (!cachedExpectedKey) {\n                  expectedKey ? expectedKey.push(keySchema.expects) : expectedKey = [keySchema.expects];\n                }\n                if (!keyResult.issues) {\n                  const dataResult = schema._parse(input, config);\n                  if (!dataResult.issues) {\n                    variantResult = dataResult;\n                    break;\n                  }\n                  if (!variantResult || !variantResult.typed && dataResult.typed) {\n                    variantResult = dataResult;\n                  }\n                }\n              } else if (schema.type === \"variant\") {\n                parseOptions(schema.options);\n                if (variantResult && !variantResult.issues) {\n                  break;\n                }\n              }\n            }\n          };\n          parseOptions(this.options);\n          cachedExpectedKey = cachedExpectedKey || [...new Set(expectedKey)].join(\" | \");\n          if (variantResult) {\n            if (variantResult.typed) {\n              return pipeResult(\n                this,\n                variantResult.output,\n                config,\n                variantResult.issues\n              );\n            }\n            return variantResult;\n          }\n        }\n        const value2 = input[this.key];\n        return schemaIssue(this, variant, value2, config, {\n          expected: cachedExpectedKey,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: value2\n            }\n          ]\n        });\n      }\n      return schemaIssue(this, variant, input, config);\n    }\n  };\n}\n\n// src/schemas/variant/variantAsync.ts\nfunction variantAsync(key, options, arg3, arg4) {\n  const [message, pipe] = defaultArgs(arg3, arg4);\n  let cachedExpectedKey;\n  return {\n    type: \"variant\",\n    expects: \"Object\",\n    async: true,\n    key,\n    options,\n    message,\n    pipe,\n    async _parse(input, config) {\n      if (input && typeof input === \"object\") {\n        if (this.key in input || !cachedExpectedKey) {\n          let expectedKey;\n          let variantResult;\n          const parseOptions = async (options2) => {\n            for (const schema of options2) {\n              if (schema.type === \"object\") {\n                const keySchema = schema.entries[this.key];\n                const keyResult = await keySchema._parse(\n                  input[this.key],\n                  config\n                );\n                if (!cachedExpectedKey) {\n                  expectedKey ? expectedKey.push(keySchema.expects) : expectedKey = [keySchema.expects];\n                }\n                if (!keyResult.issues) {\n                  const dataResult = await schema._parse(input, config);\n                  if (!dataResult.issues) {\n                    variantResult = dataResult;\n                    break;\n                  }\n                  if (!variantResult || !variantResult.typed && dataResult.typed) {\n                    variantResult = dataResult;\n                  }\n                }\n              } else if (schema.type === \"variant\") {\n                await parseOptions(schema.options);\n                if (variantResult && !variantResult.issues) {\n                  break;\n                }\n              }\n            }\n          };\n          await parseOptions(this.options);\n          cachedExpectedKey = cachedExpectedKey || [...new Set(expectedKey)].join(\" | \");\n          if (variantResult) {\n            if (variantResult.typed) {\n              return pipeResultAsync(\n                this,\n                variantResult.output,\n                config,\n                variantResult.issues\n              );\n            }\n            return variantResult;\n          }\n        }\n        const value2 = input[this.key];\n        return schemaIssue(this, variantAsync, value2, config, {\n          expected: cachedExpectedKey,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: value2\n            }\n          ]\n        });\n      }\n      return schemaIssue(this, variantAsync, input, config);\n    }\n  };\n}\n\n// src/schemas/void/void.ts\nfunction void_(message) {\n  return {\n    type: \"void\",\n    expects: \"void\",\n    async: false,\n    message,\n    _parse(input, config) {\n      if (input === void 0) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, void_, input, config);\n    }\n  };\n}\n\n// src/schemas/void/voidAsync.ts\nfunction voidAsync(message) {\n  return {\n    type: \"void\",\n    expects: \"void\",\n    async: true,\n    message,\n    async _parse(input, config) {\n      if (input === void 0) {\n        return schemaResult(true, input);\n      }\n      return schemaIssue(this, voidAsync, input, config);\n    }\n  };\n}\n\n// src/methods/keyof/keyof.ts\nfunction keyof(schema) {\n  return picklist(\n    Object.keys(schema.entries)\n  );\n}\n\n// src/methods/merge/merge.ts\nfunction merge(schemas, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return object(\n    schemas.reduce(\n      (entries, schema) => ({ ...entries, ...schema.entries }),\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/merge/mergeAsync.ts\nfunction mergeAsync(schemas, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return objectAsync(\n    schemas.reduce(\n      (entries, schema) => ({ ...entries, ...schema.entries }),\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/omit/omit.ts\nfunction omit(schema, keys, arg3, arg4, arg5) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg3, arg4, arg5);\n  return object(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => keys.includes(key) ? entries : { ...entries, [key]: schema2 },\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/omit/omitAsync.ts\nfunction omitAsync(schema, keys, arg3, arg4, arg5) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg3, arg4, arg5);\n  return objectAsync(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => keys.includes(key) ? entries : { ...entries, [key]: schema2 },\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/parse/parse.ts\nfunction parse(schema, input, config) {\n  const result = schema._parse(input, getGlobalConfig(config));\n  if (result.issues) {\n    throw new ValiError(result.issues);\n  }\n  return result.output;\n}\n\n// src/methods/parse/parseAsync.ts\nasync function parseAsync(schema, input, config) {\n  const result = await schema._parse(input, getGlobalConfig(config));\n  if (result.issues) {\n    throw new ValiError(result.issues);\n  }\n  return result.output;\n}\n\n// src/methods/partial/partial.ts\nfunction partial(schema, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return object(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => ({\n        ...entries,\n        [key]: optional(schema2)\n      }),\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/partial/partialAsync.ts\nfunction partialAsync(schema, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return objectAsync(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => ({\n        ...entries,\n        [key]: optionalAsync(schema2)\n      }),\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/pick/pick.ts\nfunction pick(schema, keys, arg3, arg4, arg5) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg3, arg4, arg5);\n  return object(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => keys.includes(key) ? { ...entries, [key]: schema2 } : entries,\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/pick/pickAsync.ts\nfunction pickAsync(schema, keys, arg3, arg4, arg5) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg3, arg4, arg5);\n  return objectAsync(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => keys.includes(key) ? { ...entries, [key]: schema2 } : entries,\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/required/required.ts\nfunction required(schema, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return object(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => ({\n        ...entries,\n        [key]: nonOptional(schema2)\n      }),\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/required/requiredAsync.ts\nfunction requiredAsync(schema, arg2, arg3, arg4) {\n  const [rest, message, pipe] = restAndDefaultArgs(arg2, arg3, arg4);\n  return objectAsync(\n    Object.entries(schema.entries).reduce(\n      (entries, [key, schema2]) => ({\n        ...entries,\n        [key]: nonOptionalAsync(schema2)\n      }),\n      {}\n    ),\n    rest,\n    message,\n    pipe\n  );\n}\n\n// src/methods/safeParse/safeParse.ts\nfunction safeParse(schema, input, config) {\n  const result = schema._parse(input, getGlobalConfig(config));\n  return {\n    typed: result.typed,\n    success: !result.issues,\n    output: result.output,\n    issues: result.issues\n  };\n}\n\n// src/methods/safeParse/safeParseAsync.ts\nasync function safeParseAsync(schema, input, config) {\n  const result = await schema._parse(input, getGlobalConfig(config));\n  return {\n    typed: result.typed,\n    success: !result.issues,\n    output: result.output,\n    issues: result.issues\n  };\n}\n\n// src/methods/transform/transform.ts\nfunction transform(schema, action, arg1) {\n  return {\n    ...schema,\n    _parse(input, config) {\n      const result = schema._parse(input, config);\n      if (result.issues) {\n        result.typed = false;\n      } else {\n        result.output = action(result.output, { issues: result.issues });\n        if (arg1) {\n          if (Array.isArray(arg1)) {\n            return pipeResult(\n              { type: typeof result.output, pipe: arg1 },\n              result.output,\n              config\n            );\n          }\n          return arg1._parse(result.output, config);\n        }\n      }\n      return result;\n    }\n  };\n}\n\n// src/methods/transform/transformAsync.ts\nfunction transformAsync(schema, action, arg1) {\n  return {\n    ...schema,\n    async: true,\n    async _parse(input, config) {\n      const result = await schema._parse(input, config);\n      if (result.issues) {\n        result.typed = false;\n      } else {\n        result.output = await action(result.output, { issues: result.issues });\n        if (arg1) {\n          if (Array.isArray(arg1)) {\n            return pipeResultAsync(\n              { type: typeof result.output, pipe: arg1 },\n              result.output,\n              config\n            );\n          }\n          return arg1._parse(result.output, config);\n        }\n      }\n      return result;\n    }\n  };\n}\n\n// src/methods/unwrap/unwrap.ts\nfunction unwrap(schema) {\n  return schema.wrapped;\n}\n\n// src/regex.ts\nvar BIC_REGEX = /^[A-Z]{6}(?!00)[A-Z\\d]{2}(?:[A-Z\\d]{3})?$/u;\nvar CUID2_REGEX = /^[a-z][\\da-z]*$/u;\nvar DECIMAL_REGEX = /^\\d+$/u;\nvar EMAIL_REGEX = /^[\\w+-]+(?:\\.[\\w+-]+)*@[\\da-z]+(?:[.-][\\da-z]+)*\\.[a-z]{2,}$/iu;\nvar EMOJI_REGEX = /^[\\p{Extended_Pictographic}\\p{Emoji_Component}]+$/u;\nvar HEXADECIMAL_REGEX = /^(0h|0x)?[\\da-f]+$/iu;\nvar HEX_COLOR_REGEX = /^#([\\da-f]{3}|[\\da-f]{4}|[\\da-f]{6}|[\\da-f]{8})$/iu;\nvar IMEI_REGEX = /^\\d{2}(?:[ /|-]?\\d{6}){2}[ /|-]?\\d$/u;\nvar IPV4_REGEX = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive\n  /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$/u\n);\nvar IPV6_REGEX = /^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar ISO_DATE_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])$/u;\nvar ISO_DATE_TIME_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_REGEX = /^(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_SECOND_REGEX = /^(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}$/u;\nvar ISO_TIMESTAMP_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}(?:\\.\\d{1,9})?Z$/u;\nvar ISO_WEEK_REGEX = /^\\d{4}-W(?:0[1-9]|[1-4]\\d|5[0-3])$/u;\nvar MAC48_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$/iu;\nvar MAC64_REGEX = /^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar OCTAL_REGEX = /^(0o)?[0-7]+$/iu;\nvar ULID_REGEX = /^[\\da-hjkmnp-tv-z]{26}$/iu;\nvar UUID_REGEX = /^[\\da-f]{8}(?:-[\\da-f]{4}){3}-[\\da-f]{12}$/iu;\n\n// src/transformations/toCustom/toCustom.ts\nfunction toCustom(action) {\n  return {\n    type: \"to_custom\",\n    async: false,\n    _parse(input) {\n      return actionOutput(action(input));\n    }\n  };\n}\n\n// src/transformations/toCustom/toCustomAsync.ts\nfunction toCustomAsync(action) {\n  return {\n    type: \"to_custom\",\n    async: true,\n    async _parse(input) {\n      return actionOutput(await action(input));\n    }\n  };\n}\n\n// src/transformations/toLowerCase/toLowerCase.ts\nfunction toLowerCase() {\n  return {\n    type: \"to_lower_case\",\n    async: false,\n    _parse(input) {\n      return actionOutput(input.toLocaleLowerCase());\n    }\n  };\n}\n\n// src/transformations/toMaxValue/toMaxValue.ts\nfunction toMaxValue(requirement) {\n  return {\n    type: \"to_max_value\",\n    async: false,\n    requirement,\n    _parse(input) {\n      return actionOutput(input > this.requirement ? this.requirement : input);\n    }\n  };\n}\n\n// src/transformations/toMinValue/toMinValue.ts\nfunction toMinValue(requirement) {\n  return {\n    type: \"to_min_value\",\n    async: false,\n    requirement,\n    _parse(input) {\n      return actionOutput(input < this.requirement ? this.requirement : input);\n    }\n  };\n}\n\n// src/transformations/toTrimmed/toTrimmed.ts\nfunction toTrimmed() {\n  return {\n    type: \"to_trimmed\",\n    async: false,\n    _parse(input) {\n      return actionOutput(input.trim());\n    }\n  };\n}\n\n// src/transformations/toTrimmedEnd/toTrimmedEnd.ts\nfunction toTrimmedEnd() {\n  return {\n    type: \"to_trimmed_end\",\n    async: false,\n    _parse(input) {\n      return actionOutput(input.trimEnd());\n    }\n  };\n}\n\n// src/transformations/toTrimmedStart/toTrimmedStart.ts\nfunction toTrimmedStart() {\n  return {\n    type: \"to_trimmed_start\",\n    async: false,\n    _parse(input) {\n      return actionOutput(input.trimStart());\n    }\n  };\n}\n\n// src/transformations/toUpperCase/toUpperCase.ts\nfunction toUpperCase() {\n  return {\n    type: \"to_upper_case\",\n    async: false,\n    _parse(input) {\n      return actionOutput(input.toUpperCase());\n    }\n  };\n}\n\n// src/validations/bic/bic.ts\nfunction bic(message) {\n  return {\n    type: \"bic\",\n    expects: null,\n    async: false,\n    message,\n    requirement: BIC_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, bic, input, \"BIC\");\n    }\n  };\n}\n\n// src/validations/bytes/bytes.ts\nfunction bytes(requirement, message) {\n  return {\n    type: \"bytes\",\n    expects: `${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      const length2 = new TextEncoder().encode(input).length;\n      if (length2 === this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, bytes, input, \"bytes\", `${length2}`);\n    }\n  };\n}\n\n// src/validations/creditCard/creditCard.ts\nvar SANITIZE_REGEX = /[- ]+/gu;\nvar PROVIDER_REGEX_LIST = [\n  // American Express\n  /^3[47]\\d{13}$/u,\n  // Diners Club\n  /^3(?:0[0-5]|[68]\\d)\\d{11}$/u,\n  // Discover\n  /^6(?:011|5\\d{2})\\d{12,15}$/u,\n  // JCB\n  /^(?:2131|1800|35\\d{3})\\d{11}$/u,\n  // Mastercard\n  /^5[1-5]\\d{2}|(222\\d|22[3-9]\\d|2[3-6]\\d{2}|27[01]\\d|2720)\\d{12}$/u,\n  // UnionPay\n  /^(6[27]\\d{14}|81\\d{14,17})$/u,\n  // Visa\n  /^4\\d{12}(?:\\d{3,6})?$/u\n];\nfunction creditCard(message) {\n  return {\n    type: \"credit_card\",\n    expects: null,\n    async: false,\n    message,\n    requirement: (input) => {\n      const sanitized = input.replace(SANITIZE_REGEX, \"\");\n      return PROVIDER_REGEX_LIST.some((regex2) => regex2.test(sanitized)) && isLuhnAlgo(sanitized);\n    },\n    _parse(input) {\n      if (this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, creditCard, input, \"credit card\");\n    }\n  };\n}\n\n// src/validations/cuid2/cuid2.ts\nfunction cuid2(message) {\n  return {\n    type: \"cuid2\",\n    expects: null,\n    async: false,\n    message,\n    requirement: CUID2_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, cuid2, input, \"Cuid2\");\n    }\n  };\n}\n\n// src/validations/custom/custom.ts\nfunction custom(requirement, message) {\n  return {\n    type: \"custom\",\n    expects: null,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, custom, input, \"input\");\n    }\n  };\n}\n\n// src/validations/custom/customAsync.ts\nfunction customAsync(requirement, message) {\n  return {\n    type: \"custom\",\n    expects: null,\n    async: true,\n    message,\n    requirement,\n    async _parse(input) {\n      if (await this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, customAsync, input, \"input\");\n    }\n  };\n}\n\n// src/validations/decimal/decimal.ts\nfunction decimal(message) {\n  return {\n    type: \"decimal\",\n    expects: null,\n    async: false,\n    message,\n    requirement: DECIMAL_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, decimal, input, \"decimal\");\n    }\n  };\n}\n\n// src/validations/email/email.ts\nfunction email(message) {\n  return {\n    type: \"email\",\n    expects: null,\n    async: false,\n    message,\n    requirement: EMAIL_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, email, input, \"email\");\n    }\n  };\n}\n\n// src/validations/emoji/emoji.ts\nfunction emoji(message) {\n  return {\n    type: \"emoji\",\n    expects: null,\n    async: false,\n    message,\n    requirement: EMOJI_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, emoji, input, \"emoji\");\n    }\n  };\n}\n\n// src/validations/endsWith/endsWith.ts\nfunction endsWith(requirement, message) {\n  return {\n    type: \"ends_with\",\n    expects: `\"${requirement}\"`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.endsWith(this.requirement)) {\n        return actionOutput(input);\n      }\n      return actionIssue(\n        this,\n        endsWith,\n        input,\n        \"end\",\n        `\"${input.slice(-this.requirement.length)}\"`\n      );\n    }\n  };\n}\n\n// src/validations/every/every.ts\nfunction every(requirement, message) {\n  return {\n    type: \"every\",\n    expects: null,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.every(this.requirement)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, every, input, \"input\");\n    }\n  };\n}\n\n// src/validations/excludes/excludes.ts\nfunction excludes(requirement, message) {\n  const received = stringify(requirement);\n  return {\n    type: \"excludes\",\n    expects: `!${received}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (!input.includes(this.requirement)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, excludes, input, \"content\", received);\n    }\n  };\n}\n\n// src/validations/finite/finite.ts\nfunction finite(message) {\n  return {\n    type: \"finite\",\n    expects: null,\n    async: false,\n    message,\n    requirement: Number.isFinite,\n    _parse(input) {\n      if (this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, finite, input, \"finite\");\n    }\n  };\n}\n\n// src/validations/hash/hash.ts\nvar HASH_LENGTHS = {\n  md4: 32,\n  md5: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8,\n  adler32: 8\n};\nfunction hash(types, message) {\n  return {\n    type: \"hash\",\n    expects: null,\n    async: false,\n    message,\n    requirement: RegExp(\n      types.map((type) => `^[a-f0-9]{${HASH_LENGTHS[type]}}$`).join(\"|\"),\n      \"iu\"\n    ),\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, hash, input, \"hash\");\n    }\n  };\n}\n\n// src/validations/hexadecimal/hexadecimal.ts\nfunction hexadecimal(message) {\n  return {\n    type: \"hexadecimal\",\n    expects: null,\n    async: false,\n    message,\n    requirement: HEXADECIMAL_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, hexadecimal, input, \"hexadecimal\");\n    }\n  };\n}\n\n// src/validations/hexColor/hexColor.ts\nfunction hexColor(message) {\n  return {\n    type: \"hex_color\",\n    expects: null,\n    async: false,\n    message,\n    requirement: HEX_COLOR_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, hexColor, input, \"hex color\");\n    }\n  };\n}\n\n// src/validations/imei/imei.ts\nfunction imei(message) {\n  return {\n    type: \"imei\",\n    expects: null,\n    async: false,\n    message,\n    requirement: [IMEI_REGEX, isLuhnAlgo],\n    _parse(input) {\n      if (this.requirement[0].test(input) && this.requirement[1](input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, imei, input, \"IMEI\");\n    }\n  };\n}\n\n// src/validations/includes/includes.ts\nfunction includes(requirement, message) {\n  const expects = stringify(requirement);\n  return {\n    type: \"includes\",\n    expects,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.includes(this.requirement)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, includes, input, \"content\", `!${expects}`);\n    }\n  };\n}\n\n// src/validations/integer/integer.ts\nfunction integer(message) {\n  return {\n    type: \"integer\",\n    expects: null,\n    async: false,\n    message,\n    requirement: Number.isInteger,\n    _parse(input) {\n      if (this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, integer, input, \"integer\");\n    }\n  };\n}\n\n// src/validations/ip/ip.ts\nfunction ip(message) {\n  return {\n    type: \"ip\",\n    expects: null,\n    async: false,\n    message,\n    // TODO: It is strange that we have an OR relationship between requirements\n    requirement: [IPV4_REGEX, IPV6_REGEX],\n    _parse(input) {\n      if (this.requirement[0].test(input) || this.requirement[1].test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, ip, input, \"IP\");\n    }\n  };\n}\n\n// src/validations/ipv4/ipv4.ts\nfunction ipv4(message) {\n  return {\n    type: \"ipv4\",\n    expects: null,\n    async: false,\n    message,\n    requirement: IPV4_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, ipv4, input, \"IPv4\");\n    }\n  };\n}\n\n// src/validations/ipv6/ipv6.ts\nfunction ipv6(message) {\n  return {\n    type: \"ipv6\",\n    expects: null,\n    async: false,\n    message,\n    requirement: IPV6_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, ipv6, input, \"IPv6\");\n    }\n  };\n}\n\n// src/validations/isoDate/isoDate.ts\nfunction isoDate(message) {\n  return {\n    type: \"iso_date\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ISO_DATE_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, isoDate, input, \"date\");\n    }\n  };\n}\n\n// src/validations/isoDateTime/isoDateTime.ts\nfunction isoDateTime(message) {\n  return {\n    type: \"iso_date_time\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ISO_DATE_TIME_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, isoDateTime, input, \"date-time\");\n    }\n  };\n}\n\n// src/validations/isoTime/isoTime.ts\nfunction isoTime(message) {\n  return {\n    type: \"iso_time\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ISO_TIME_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, isoTime, input, \"time\");\n    }\n  };\n}\n\n// src/validations/isoTimeSecond/isoTimeSecond.ts\nfunction isoTimeSecond(message) {\n  return {\n    type: \"iso_time_second\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ISO_TIME_SECOND_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, isoTimeSecond, input, \"time second\");\n    }\n  };\n}\n\n// src/validations/isoTimestamp/isoTimestamp.ts\nfunction isoTimestamp(message) {\n  return {\n    type: \"iso_timestamp\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ISO_TIMESTAMP_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, isoTimestamp, input, \"timestamp\");\n    }\n  };\n}\n\n// src/validations/isoWeek/isoWeek.ts\nfunction isoWeek(message) {\n  return {\n    type: \"iso_week\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ISO_WEEK_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, isoWeek, input, \"week\");\n    }\n  };\n}\n\n// src/validations/length/length.ts\nfunction length(requirement, message) {\n  return {\n    type: \"length\",\n    expects: `${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.length === this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, length, input, \"length\", `${input.length}`);\n    }\n  };\n}\n\n// src/validations/mac/mac.ts\nfunction mac(message) {\n  return {\n    type: \"mac\",\n    expects: null,\n    async: false,\n    message,\n    // TODO: It is strange that we have an OR relationship between requirements\n    requirement: [MAC48_REGEX, MAC64_REGEX],\n    _parse(input) {\n      if (this.requirement[0].test(input) || this.requirement[1].test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, mac, input, \"MAC\");\n    }\n  };\n}\n\n// src/validations/mac48/mac48.ts\nfunction mac48(message) {\n  return {\n    type: \"mac48\",\n    expects: null,\n    async: false,\n    message,\n    requirement: MAC48_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, mac48, input, \"48-bit MAC\");\n    }\n  };\n}\n\n// src/validations/mac64/mac64.ts\nfunction mac64(message) {\n  return {\n    type: \"mac64\",\n    expects: null,\n    async: false,\n    message,\n    requirement: MAC64_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, mac64, input, \"64-bit MAC\");\n    }\n  };\n}\n\n// src/validations/maxBytes/maxBytes.ts\nfunction maxBytes(requirement, message) {\n  return {\n    type: \"max_bytes\",\n    expects: `<=${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      const length2 = new TextEncoder().encode(input).length;\n      if (length2 <= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, maxBytes, input, \"bytes\", `${length2}`);\n    }\n  };\n}\n\n// src/validations/maxLength/maxLength.ts\nfunction maxLength(requirement, message) {\n  return {\n    type: \"max_length\",\n    expects: `<=${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.length <= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, maxLength, input, \"length\", `${input.length}`);\n    }\n  };\n}\n\n// src/validations/maxSize/maxSize.ts\nfunction maxSize(requirement, message) {\n  return {\n    type: \"max_size\",\n    expects: `<=${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.size <= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, maxSize, input, \"size\", `${input.size}`);\n    }\n  };\n}\n\n// src/validations/maxValue/maxValue.ts\nfunction maxValue(requirement, message) {\n  return {\n    type: \"max_value\",\n    expects: `<=${requirement instanceof Date ? requirement.toJSON() : stringify(requirement)}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input <= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(\n        this,\n        maxValue,\n        input,\n        \"value\",\n        input instanceof Date ? input.toJSON() : stringify(input)\n      );\n    }\n  };\n}\n\n// src/validations/minBytes/minBytes.ts\nfunction minBytes(requirement, message) {\n  return {\n    type: \"min_bytes\",\n    expects: `>=${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      const length2 = new TextEncoder().encode(input).length;\n      if (length2 >= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, minBytes, input, \"bytes\", `${length2}`);\n    }\n  };\n}\n\n// src/validations/mimeType/mimeType.ts\nfunction mimeType(requirement, message) {\n  return {\n    type: \"mime_type\",\n    expects: requirement.map((option) => `\"${option}\"`).join(\" | \"),\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (this.requirement.includes(input.type)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, mimeType, input, \"MIME type\");\n    }\n  };\n}\n\n// src/validations/minLength/minLength.ts\nfunction minLength(requirement, message) {\n  return {\n    type: \"min_length\",\n    expects: `>=${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.length >= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, minLength, input, \"length\", `${input.length}`);\n    }\n  };\n}\n\n// src/validations/minSize/minSize.ts\nfunction minSize(requirement, message) {\n  return {\n    type: \"min_size\",\n    expects: `>=${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.size >= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, minSize, input, \"size\", `${input.size}`);\n    }\n  };\n}\n\n// src/validations/minValue/minValue.ts\nfunction minValue(requirement, message) {\n  return {\n    type: \"min_value\",\n    expects: `>=${requirement instanceof Date ? requirement.toJSON() : stringify(requirement)}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input >= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(\n        this,\n        minValue,\n        input,\n        \"value\",\n        input instanceof Date ? input.toJSON() : stringify(input)\n      );\n    }\n  };\n}\n\n// src/validations/multipleOf/multipleOf.ts\nfunction multipleOf(requirement, message) {\n  return {\n    type: \"multiple_of\",\n    expects: `%${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input % this.requirement === 0) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, multipleOf, input, \"multiple\", `${input}`);\n    }\n  };\n}\n\n// src/validations/notBytes/notBytes.ts\nfunction notBytes(requirement, message) {\n  return {\n    type: \"not_bytes\",\n    expects: `!${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      const length2 = new TextEncoder().encode(input).length;\n      if (length2 !== this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, notBytes, input, \"bytes\", `${length2}`);\n    }\n  };\n}\n\n// src/validations/notLength/notLength.ts\nfunction notLength(requirement, message) {\n  return {\n    type: \"not_length\",\n    expects: `!${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.length !== this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, notLength, input, \"length\", `${input.length}`);\n    }\n  };\n}\n\n// src/validations/notSize/notSize.ts\nfunction notSize(requirement, message) {\n  return {\n    type: \"not_size\",\n    expects: `!${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.size !== this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, notSize, input, \"size\", `${input.size}`);\n    }\n  };\n}\n\n// src/validations/notValue/notValue.ts\nfunction notValue(requirement, message) {\n  return {\n    type: \"not_value\",\n    expects: `!${requirement instanceof Date ? requirement.toJSON() : stringify(requirement)}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input < this.requirement || input > this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(\n        this,\n        notValue,\n        input,\n        \"value\",\n        input instanceof Date ? input.toJSON() : stringify(input)\n      );\n    }\n  };\n}\n\n// src/validations/octal/octal.ts\nfunction octal(message) {\n  return {\n    type: \"octal\",\n    expects: null,\n    async: false,\n    message,\n    requirement: OCTAL_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, octal, input, \"octal\");\n    }\n  };\n}\n\n// src/validations/regex/regex.ts\nfunction regex(requirement, message) {\n  return {\n    type: \"regex\",\n    expects: `${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, regex, input, \"format\");\n    }\n  };\n}\n\n// src/validations/safeInteger/safeInteger.ts\nfunction safeInteger(message) {\n  return {\n    type: \"safe_integer\",\n    expects: null,\n    async: false,\n    message,\n    requirement: Number.isSafeInteger,\n    _parse(input) {\n      if (this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, safeInteger, input, \"safe integer\");\n    }\n  };\n}\n\n// src/validations/size/size.ts\nfunction size(requirement, message) {\n  return {\n    type: \"size\",\n    expects: `${requirement}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.size === this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, size, input, \"size\", `${input.size}`);\n    }\n  };\n}\n\n// src/validations/some/some.ts\nfunction some(requirement, message) {\n  return {\n    type: \"some\",\n    expects: null,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.some(this.requirement)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, some, input, \"input\");\n    }\n  };\n}\n\n// src/validations/startsWith/startsWith.ts\nfunction startsWith(requirement, message) {\n  return {\n    type: \"starts_with\",\n    expects: `\"${requirement}\"`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input.startsWith(this.requirement)) {\n        return actionOutput(input);\n      }\n      return actionIssue(\n        this,\n        startsWith,\n        input,\n        \"start\",\n        `\"${input.slice(0, this.requirement.length)}\"`\n      );\n    }\n  };\n}\n\n// src/validations/ulid/ulid.ts\nfunction ulid(message) {\n  return {\n    type: \"ulid\",\n    expects: null,\n    async: false,\n    message,\n    requirement: ULID_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, ulid, input, \"ULID\");\n    }\n  };\n}\n\n// src/validations/url/url.ts\nfunction url(message) {\n  return {\n    type: \"url\",\n    expects: null,\n    async: false,\n    message,\n    requirement(input) {\n      try {\n        new URL(input);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    _parse(input) {\n      if (this.requirement(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, url, input, \"URL\");\n    }\n  };\n}\n\n// src/validations/uuid/uuid.ts\nfunction uuid(message) {\n  return {\n    type: \"uuid\",\n    expects: null,\n    async: false,\n    message,\n    requirement: UUID_REGEX,\n    _parse(input) {\n      if (this.requirement.test(input)) {\n        return actionOutput(input);\n      }\n      return actionIssue(this, uuid, input, \"UUID\");\n    }\n  };\n}\n\n// src/validations/value/value.ts\nfunction value(requirement, message) {\n  return {\n    type: \"value\",\n    expects: `${requirement instanceof Date ? requirement.toJSON() : stringify(requirement)}`,\n    async: false,\n    message,\n    requirement,\n    _parse(input) {\n      if (input <= this.requirement && input >= this.requirement) {\n        return actionOutput(input);\n      }\n      return actionIssue(\n        this,\n        value,\n        input,\n        \"value\",\n        input instanceof Date ? input.toJSON() : stringify(input)\n      );\n    }\n  };\n}\nexport {\n  BIC_REGEX,\n  BrandSymbol,\n  CUID2_REGEX,\n  DECIMAL_REGEX,\n  EMAIL_REGEX,\n  EMOJI_REGEX,\n  HEXADECIMAL_REGEX,\n  HEX_COLOR_REGEX,\n  IMEI_REGEX,\n  IPV4_REGEX,\n  IPV6_REGEX,\n  ISO_DATE_REGEX,\n  ISO_DATE_TIME_REGEX,\n  ISO_TIMESTAMP_REGEX,\n  ISO_TIME_REGEX,\n  ISO_TIME_SECOND_REGEX,\n  ISO_WEEK_REGEX,\n  MAC48_REGEX,\n  MAC64_REGEX,\n  OCTAL_REGEX,\n  ULID_REGEX,\n  UUID_REGEX,\n  ValiError,\n  actionIssue,\n  actionOutput,\n  any,\n  anyAsync,\n  array,\n  arrayAsync,\n  bic,\n  bigint,\n  bigintAsync,\n  blob,\n  blobAsync,\n  boolean,\n  booleanAsync,\n  brand,\n  bytes,\n  coerce,\n  coerceAsync,\n  creditCard,\n  cuid2,\n  custom,\n  customAsync,\n  date,\n  dateAsync,\n  decimal,\n  defaultArgs,\n  deleteGlobalConfig,\n  deleteGlobalMessage,\n  deleteSchemaMessage,\n  deleteSpecificMessage,\n  email,\n  emoji,\n  endsWith,\n  enumAsync,\n  enum_,\n  every,\n  excludes,\n  fallback,\n  fallbackAsync,\n  finite,\n  flatten,\n  forward,\n  forwardAsync,\n  getDefault,\n  getDefaultAsync,\n  getDefaults,\n  getDefaultsAsync,\n  getFallback,\n  getFallbackAsync,\n  getFallbacks,\n  getFallbacksAsync,\n  getGlobalConfig,\n  getGlobalMessage,\n  getSchemaMessage,\n  getSpecificMessage,\n  hash,\n  hexColor,\n  hexadecimal,\n  i18n,\n  imei,\n  includes,\n  instance,\n  instanceAsync,\n  integer,\n  intersect,\n  intersectAsync,\n  ip,\n  ipv4,\n  ipv6,\n  is,\n  isLuhnAlgo,\n  isOfType,\n  isoDate,\n  isoDateTime,\n  isoTime,\n  isoTimeSecond,\n  isoTimestamp,\n  isoWeek,\n  keyof,\n  lazy,\n  lazyAsync,\n  length,\n  literal,\n  literalAsync,\n  mac,\n  mac48,\n  mac64,\n  map,\n  mapAsync,\n  maxBytes,\n  maxLength,\n  maxSize,\n  maxValue,\n  merge,\n  mergeAsync,\n  mimeType,\n  minBytes,\n  minLength,\n  minSize,\n  minValue,\n  multipleOf,\n  nan,\n  nanAsync,\n  never,\n  neverAsync,\n  nonNullable,\n  nonNullableAsync,\n  nonNullish,\n  nonNullishAsync,\n  nonOptional,\n  nonOptionalAsync,\n  notBytes,\n  notLength,\n  notSize,\n  notValue,\n  nullAsync,\n  null_,\n  nullable,\n  nullableAsync,\n  nullish,\n  nullishAsync,\n  number,\n  numberAsync,\n  object,\n  objectAsync,\n  octal,\n  omit,\n  omitAsync,\n  optional,\n  optionalAsync,\n  parse,\n  parseAsync,\n  partial,\n  partialAsync,\n  pick,\n  pickAsync,\n  picklist,\n  picklistAsync,\n  pipeResult,\n  pipeResultAsync,\n  record,\n  recordAsync,\n  regex,\n  required,\n  requiredAsync,\n  restAndDefaultArgs,\n  safeInteger,\n  safeParse,\n  safeParseAsync,\n  schemaIssue,\n  schemaResult,\n  set,\n  setAsync,\n  setGlobalConfig,\n  setGlobalMessage,\n  setSchemaMessage,\n  setSpecificMessage,\n  size,\n  some,\n  special,\n  specialAsync,\n  startsWith,\n  string,\n  stringAsync,\n  stringify,\n  symbol,\n  symbolAsync,\n  toCustom,\n  toCustomAsync,\n  toLowerCase,\n  toMaxValue,\n  toMinValue,\n  toTrimmed,\n  toTrimmedEnd,\n  toTrimmedStart,\n  toUpperCase,\n  transform,\n  transformAsync,\n  tuple,\n  tupleAsync,\n  ulid,\n  undefinedAsync,\n  undefined_,\n  union,\n  unionAsync,\n  unknown,\n  unknownAsync,\n  unwrap,\n  url,\n  uuid,\n  value,\n  variant,\n  variantAsync,\n  voidAsync,\n  void_\n};\n","import{getPublishedId as t,studioPath as e}from\"@sanity/client/csm\";import{string as r,minLength as o,optional as s,object as n,record as a,unknown as c,is as i,safeParse as u,parse as p}from\"valibot\";function f(t){return\"object\"==typeof t&&null!==t&&!Array.isArray(t)}function l(t){return null!==t&&Array.isArray(t)}function d(t){let e=\"\";for(const r of t)\"string\"!=typeof r?\"number\"!=typeof r?l(r)?(e&&(e+=\":\"),e+=`${r.join(\",\")}}`):r._key&&(e&&(e+=\":\"),e+=`${r._key}`):(e&&(e+=\":\"),e+=`${r}`):(e&&(e+=\".\"),e+=r);return e}const b=/^([A-Za-z]+):([0-9]+)$/,y=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,m=/^([A-Za-z]+):([a-z0-9]+)$/;function h(t){const e=[];for(const r of t.split(\".\")){const t=b.exec(r);if(t){e.push(t[1],Number(t[2]));continue}const o=y.exec(r);if(o){e.push(o[1],[Number(o[2]),Number(o[3])]);continue}const s=m.exec(r);s?e.push(s[1],{_key:s[2]}):e.push(r)}return e}const k=\"drafts.\",j=r([o(1)]),w=s(j),A=n({baseUrl:j,dataset:w,id:j,path:j,projectId:w,tool:w,type:w,workspace:w,isDraft:s(r())}),U=n({origin:j,href:j,data:s(a(r(),c()))});function $(t){return i(A,t)}function g(t){return i(U,t)}function x(r){const{id:o,path:s,baseUrl:n,tool:a,workspace:c,type:i}=r;return $(r)?[[\"id\",t(o)],[\"type\",i],[\"path\",d(e.fromString(s))],[\"base\",encodeURIComponent(n)],[\"workspace\",c],[\"tool\",a],[\"isDraft\",o.startsWith(k)]].filter((([,t])=>!!t)).map((t=>{const[e,r]=t;return!0===r?e:t.join(\"=\")})).join(\";\"):void 0}function z(t){const r=t.split(\";\").reduce(((t,r)=>{const[o,s]=r.split(\"=\");if(!o||r.includes(\"=\")&&!s)return t;switch(o){case\"id\":t.id=s;break;case\"type\":t.type=s;break;case\"path\":t.path=e.toString(h(s));break;case\"base\":t.baseUrl=decodeURIComponent(s);break;case\"tool\":t.tool=s;break;case\"workspace\":t.workspace=s;break;case\"projectId\":t.projectId=s;break;case\"dataset\":t.dataset=s;break;case\"isDraft\":t.isDraft=\"\"}return t}),{});if($(r))return r}function D(t){const e=u(A,t);if(e.success)return e.output;const r=u(U,t);if(r.success)try{const t=new URL(r.output.href,typeof document>\"u\"?\"https://example.com\":location.origin);return t.searchParams.size>0?p(A,Object.fromEntries(t.searchParams.entries())):r.output}catch(t){return console.error(\"Failed to parse sanity node\",t),r.output}}function I(t){if(\"object\"==typeof t&&null!==t)return D(t);try{return D(JSON.parse(t))}catch{return z(t)}}export{k as D,l as a,$ as b,g as c,z as d,x as e,I as f,f as i,d as p,h as u};//# sourceMappingURL=transformSanityNodeData.js.map\n","import{studioPath as t}from\"@sanity/client/csm\";import{e as r}from\"./_chunks/transformSanityNodeData.js\";import{p as e,u as n}from\"./_chunks/transformSanityNodeData.js\";function o(e){function n(r){return r?\"string\"==typeof r?t.fromString(r):r:[]}function a(e){if(!e.id)throw new Error(\"`id` is required to create a data attribute\");if(!e.type)throw new Error(\"`type` is required to create a data attribute\");if(!e.path||!e.path.length)throw new Error(\"`path` is required to create a data attribute\");const n={baseUrl:e.baseUrl||\"/\",workspace:e.workspace,tool:e.tool,type:e.type,id:e.id,path:\"string\"==typeof e.path?e.path:t.toString(e.path)};return r(n)}const i=function(t){return a({...e,path:[...n(e.path),...n(t)]})};return i.toString=function(){return a(e)},i.combine=function(t){return o({...e,...t})},i.scope=function(t){return o({...e,path:[...n(e.path),...n(t)]})},i}function a(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const i=typeof window<\"u\"&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),u={alt:\"altKey\",ctrl:\"ctrlKey\",mod:i?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function p(t,r){return t.every((t=>u[t]?r[u[t]]:r.key===t.toUpperCase()))}function s(t){return t.key===(i?\"Meta\":\"Ctrl\")}function c(t){return\"Alt\"===t.key}export{o as createDataAttribute,a as getQueryCacheKey,c as isAltKey,p as isHotkey,s as isModKey,e as pathToUrlString,n as urlStringToPath};//# sourceMappingURL=index.js.map\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Inline,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, onContinueAnyway, ...restProps } = props\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text=\"Retry\" />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text=\"Continue anyway\"\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport { StateLink, useRouter } from 'sanity/router'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & { previewUrl?: string },\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { documentId, documentType, parentRefPath, template, ...restProps } =\n    props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries({ preview: props.previewUrl }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find(\n          (r) => r._id === childId || getPublishedId(r._id) === childId,\n        )\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} previewUrl={previewUrl} />\n      ),\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onDeskParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n        // defaultOrdering: [{ field: '_updatedAt', direction: 'desc' }],\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [deskParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport { decodeJsonParams } from 'sanity/router'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n  previewUrl?: string\n}): ReactElement {\n  const {\n    documentId,\n    documentType,\n    params,\n    onDeskParams,\n    onFocusPath,\n    previewUrl,\n  } = props\n  const { template, templateParams } = params\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{ height: '100%' }}>\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n          previewUrl={previewUrl}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\nimport { StructureToolProvider } from 'sanity/structure'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n  previewUrl?: string\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    previewUrl,\n  } = props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n        previewUrl={previewUrl}\n      />\n    </StructureToolProvider>\n  )\n}\n","import { type ReactElement } from 'react'\nimport type { Path } from 'sanity'\n\nimport type { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n        previewUrl={previewUrl}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow-x: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useCallback } from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { PresentationNavigate } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const { children, navigate: _navigate } = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? { preview } : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { memo, useCallback, useMemo } from 'react'\n\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport type { NavigatorOptions } from './types'\nimport { useLocalState } from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const { unstable_navigator } = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{ navigatorEnabled, toggleNavigator }, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, navigate, params } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      navigate,\n      params,\n    }),\n    [deskParams, devMode, name, navigate, params],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import type { ClientPerspective } from '@sanity/client'\nimport type { Dispatch, Reducer } from 'react'\nimport { boolean, fallback, object, parse, picklist } from 'valibot'\n\nexport interface PresentationState {\n  iframe: {\n    status: 'loading' | 'loaded' | 'refreshing' | 'reloading'\n  }\n  /**\n   * The selected perspective that all previews should use\n   */\n  perspective: Extract<'published' | 'previewDrafts', ClientPerspective>\n  /**\n   * The viewport size of the preview iframe is currently hardcoded, using this enum to determine the size\n   */\n  viewport: 'desktop' | 'mobile'\n  visualEditing: {\n    overlaysEnabled: boolean\n  }\n}\n\nexport const ACTION_IFRAME_LOADED = 'ACTION_IFRAME_LOADED'\nexport const ACTION_IFRAME_REFRESH = 'ACTION_IFRAME_REFRESH'\nexport const ACTION_IFRAME_RELOAD = 'ACTION_IFRAME_RELOAD'\nexport const ACTION_PERSPECTIVE = 'ACTION_PERSPECTIVE'\nexport const ACTION_VIEWPORT = 'ACTION_VIEWPORT'\nexport const ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE =\n  'ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE'\n\ninterface IframeLoadedAction {\n  type: typeof ACTION_IFRAME_LOADED\n}\ninterface IframeRefreshAction {\n  type: typeof ACTION_IFRAME_REFRESH\n}\ninterface IframeReloadAction {\n  type: typeof ACTION_IFRAME_RELOAD\n}\ninterface PerspectiveAction {\n  type: typeof ACTION_PERSPECTIVE\n  perspective: PresentationState['perspective']\n}\ninterface ViewportAction {\n  type: typeof ACTION_VIEWPORT\n  viewport: PresentationState['viewport']\n}\ninterface VisualEditingOverlaysToggleAction {\n  type: typeof ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE\n  enabled: boolean\n}\n\ntype PresentationAction =\n  | IframeLoadedAction\n  | IframeRefreshAction\n  | IframeReloadAction\n  | PerspectiveAction\n  | ViewportAction\n  | VisualEditingOverlaysToggleAction\n\nexport const presentationReducer: Reducer<\n  Readonly<PresentationState>,\n  Readonly<PresentationAction>\n> = (state, action) => {\n  switch (action.type) {\n    case ACTION_IFRAME_LOADED:\n      return state.iframe.status === 'loaded'\n        ? state\n        : {\n            ...state,\n            iframe: {\n              ...state.iframe,\n              status: 'loaded',\n            },\n          }\n    case ACTION_IFRAME_REFRESH:\n      return state.iframe.status === 'refreshing'\n        ? state\n        : {\n            ...state,\n            iframe: {\n              ...state.iframe,\n              status: 'refreshing',\n            },\n          }\n    case ACTION_IFRAME_RELOAD:\n      return state.iframe.status === 'reloading'\n        ? state\n        : {\n            ...state,\n            iframe: {\n              ...state.iframe,\n              status: 'reloading',\n            },\n          }\n    case ACTION_PERSPECTIVE:\n      return {\n        ...state,\n        perspective: parse(perspectiveSchema, action.perspective),\n      }\n    case ACTION_VIEWPORT:\n      return {\n        ...state,\n        viewport: parse(viewportSchema, action.viewport),\n      }\n    case ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE:\n      return toggleVisualEditingOverlays(state, action)\n    default:\n      return state\n  }\n}\n\nconst toggleVisualEditingOverlays: Reducer<\n  Readonly<PresentationState>,\n  Readonly<VisualEditingOverlaysToggleAction>\n> = (state, action) => {\n  if (state.visualEditing.overlaysEnabled === action.enabled) return state\n  return {\n    ...state,\n    visualEditing: {\n      ...state.visualEditing,\n      overlaysEnabled: action.enabled,\n    },\n  }\n}\n\nconst iframeStatusSchema = picklist([\n  'loading',\n  'loaded',\n  'refreshing',\n  'reloading',\n])\nconst perspectiveSchema = fallback(\n  picklist([\n    'published',\n    'previewDrafts',\n  ] satisfies PresentationState['perspective'][]),\n  'previewDrafts',\n)\nconst viewportSchema = fallback(\n  picklist(['desktop', 'mobile'] satisfies PresentationState['viewport'][]),\n  'desktop',\n)\nconst initStateSchema = object({\n  iframe: object({\n    status: iframeStatusSchema,\n  }),\n  perspective: perspectiveSchema,\n  viewport: viewportSchema,\n  visualEditing: object({ overlaysEnabled: boolean() }),\n})\n\nconst INITIAL_PRESENTATION_STATE = {\n  iframe: {\n    status: 'loading',\n  },\n  perspective: 'previewDrafts',\n  viewport: 'desktop',\n  visualEditing: {\n    overlaysEnabled: false,\n  },\n} as const satisfies PresentationState\nexport function presentationReducerInit(\n  state: Readonly<\n    Partial<{\n      perspective: string\n      viewport: string\n    }>\n  >,\n): Readonly<PresentationState> {\n  return parse(initStateSchema, { ...INITIAL_PRESENTATION_STATE, ...state })\n}\n\nexport type DispatchPresentationAction = Dispatch<Readonly<PresentationAction>>\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { ResetIcon } from '@sanity/icons'\nimport { TextInput, type TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useActiveWorkspace } from 'sanity'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { basePath = '/' } = useActiveWorkspace()?.activeWorkspace || {}\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (\n          !origin &&\n          (absoluteValue.startsWith(`${basePath}/`) ||\n            absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            `URL can't have the same base path as the Studio ${basePath}`,\n          )\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import { CopyIcon, LaunchIcon } from '@sanity/icons'\nimport { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport {\n  hasSecretSearchParams,\n  setSecretSearchParams,\n} from '@sanity/preview-url-secret/without-secret-search-params'\nimport { MenuItem, useToast } from '@sanity/ui'\nimport { useCallback, useState } from 'react'\nimport { useClient, useCurrentUser } from 'sanity'\n\nimport { API_VERSION } from '../constants'\nimport type { PreviewFrameProps } from './PreviewFrame'\n\n/** @internal */\nexport function ShareUrlMenuItems(\n  props: Pick<PreviewFrameProps, 'initialUrl' | 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const { initialUrl, openPopup, previewLocationOrigin, previewLocationRoute } =\n    props\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <>\n      <CopyUrlMenuButton\n        initialUrl={initialUrl}\n        previewLocationOrigin={previewLocationOrigin}\n        previewLocationRoute={previewLocationRoute}\n      />\n      <MenuItem\n        icon={LaunchIcon}\n        text=\"Open preview\"\n        as=\"a\"\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </>\n  )\n}\n\nfunction CopyUrlMenuButton(\n  props: Pick<PreviewFrameProps, 'initialUrl'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, previewLocationOrigin, previewLocationRoute } = props\n\n  const { push: pushToast } = useToast()\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [disabled, setDisabled] = useState(false)\n\n  return (\n    <MenuItem\n      disabled={disabled}\n      onClick={() => {\n        if (!navigator?.clipboard) {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Clipboard not supported',\n          })\n          return false\n        }\n        setDisabled(true)\n\n        let id: string | undefined = undefined\n        let url = `${previewLocationOrigin}${previewLocationRoute}`\n        const onFinally = () => {\n          pushToast({\n            id,\n            closable: true,\n            status: 'success',\n            title: 'The URL is copied to the clipboard',\n          })\n          setDisabled(false)\n        }\n        const onError = (error: Error) => {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Copy failed',\n            description: error.message || error.toString(),\n          })\n          setDisabled(false)\n        }\n        if (\n          hasSecretSearchParams(initialUrl) &&\n          typeof ClipboardItem !== 'undefined'\n        ) {\n          const type = 'text/plain'\n          const resolvePreviewUrl = async () => {\n            id = pushToast({\n              closable: true,\n              title: 'Copying URL to clipboard…',\n            })\n            const previewUrlSecret = await createPreviewSecret(\n              client,\n              '@sanity/presentation',\n              typeof window === 'undefined' ? '' : location.href,\n              currentUser?.id,\n            )\n\n            const newUrl = setSecretSearchParams(\n              initialUrl,\n              previewUrlSecret.secret,\n              previewLocationRoute,\n            )\n            url = newUrl.toString()\n            return new Blob([url], { type })\n          }\n\n          // Try to save to clipboard then save it in the state if worked\n          const item = new ClipboardItem({\n            [type]: resolvePreviewUrl(),\n          })\n          navigator.clipboard.write([item]).then(onFinally).catch(onError)\n        } else {\n          navigator.clipboard.writeText(url).then(onFinally).catch(onError)\n        }\n      }}\n      text=\"Copy link\"\n      icon={CopyIcon}\n    />\n  )\n}\n","import type { ChannelStatus } from '@sanity/channels'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n  ShareIcon,\n} from '@sanity/icons'\nimport { withoutSecretSearchParams } from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  type ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  type ComponentType,\n  createElement,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Hotkeys } from 'sanity'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  ACTION_PERSPECTIVE,\n  ACTION_VIEWPORT,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport type { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\nimport { ShareUrlMenuItems } from './ShareUrlMenuItems'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<PresentationState['perspective'], string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationState['perspective'], ButtonTone> =\n  {\n    previewDrafts: 'caution',\n    published: 'positive',\n  }\n\nconst PERSPECTIVE_ICONS: Record<\n  PresentationState['perspective'],\n  ComponentType\n> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n}\n\nexport interface PreviewFrameProps\n  extends Pick<\n    PresentationState,\n    'iframe' | 'perspective' | 'viewport' | 'visualEditing'\n  > {\n  dispatch: DispatchPresentationAction\n  initialUrl: URL\n  loadersConnection: ChannelStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ChannelStatus\n  params: PresentationParams\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n}\n\nexport const PreviewFrame = forwardRef<HTMLIFrameElement, PreviewFrameProps>(\n  function PreviewFrame(props, ref) {\n    const {\n      dispatch,\n      iframe,\n      initialUrl,\n      loadersConnection,\n      navigatorEnabled,\n      onPathChange,\n      onRefresh,\n      openPopup,\n      overlaysConnection,\n      params,\n      perspective,\n      targetOrigin,\n      toggleNavigator,\n      toggleOverlay,\n      viewport,\n      visualEditing: { overlaysEnabled },\n    } = props\n\n    const { devMode } = usePresentationTool()\n\n    const prefersReducedMotion = usePrefersReducedMotion()\n\n    const setDesktopMode = useCallback(\n      () => dispatch({ type: ACTION_VIEWPORT, viewport: 'desktop' }),\n      [dispatch],\n    )\n    const setMobileMode = useCallback(\n      () => dispatch({ type: ACTION_VIEWPORT, viewport: 'mobile' }),\n      [dispatch],\n    )\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy =\n      loading || refreshing || overlaysConnection === 'connecting'\n\n    const previewLocationOrigin = useMemo(() => {\n      return targetOrigin === location.origin ? '' : targetOrigin\n    }, [targetOrigin])\n\n    const handleRefresh = useCallback(() => {\n      onRefresh(() => {\n        if (typeof ref === 'function' || !ref?.current) {\n          return\n        }\n        dispatch({ type: ACTION_IFRAME_RELOAD })\n        // Funky way to reload an iframe without CORS issues\n        // eslint-disable-next-line no-self-assign\n        // ref.current.src = ref.current.src\n        ref.current.src = `${targetOrigin}${params.preview || '/'}`\n      })\n    }, [dispatch, onRefresh, params.preview, targetOrigin, ref])\n    const handleRetry = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      dispatch({ type: ACTION_IFRAME_RELOAD })\n    }, [dispatch, ref, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n      useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (\n        overlaysConnection === 'connecting' ||\n        overlaysConnection === 'reconnecting'\n      ) {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 1000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'disconnected') {\n        setSomethingIsWrong(true)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const previewLocationRoute = useMemo(() => {\n      const previewUrl = new URL(params.preview || '/', targetOrigin)\n      const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n      return `${pathname}${search}`\n    }, [params.preview, targetOrigin])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({ type: ACTION_IFRAME_LOADED })\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(\n          new MouseEvent('mousedown', { bubbles: true, cancelable: true }),\n        )\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [ref])\n\n    return (\n      <MotionConfig\n        transition={prefersReducedMotion ? { duration: 0 } : undefined}\n      >\n        <TooltipDelayGroupProvider delay={1000}>\n          <Card\n            flex=\"none\"\n            padding={2}\n            shadow={1}\n            style={{ position: 'relative' }}\n          >\n            <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n              {toggleNavigator && (\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Toggle navigator</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Toggle navigator\"\n                    fontSize={1}\n                    icon={PanelLeftIcon}\n                    mode=\"bleed\"\n                    onClick={toggleNavigator}\n                    padding={3}\n                    selected={navigatorEnabled}\n                  />\n                </Tooltip>\n              )}\n\n              <Tooltip\n                animate\n                content={\n                  <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                    <Box padding={1}>\n                      <Text size={1}>\n                        {overlaysEnabled\n                          ? 'Disable edit overlay'\n                          : 'Enable edit overlay'}\n                      </Text>\n                    </Box>\n                    <Box paddingY={1}>\n                      <Hotkeys\n                        keys={['Alt']}\n                        style={{ marginTop: -4, marginBottom: -4 }}\n                      />\n                    </Box>\n                  </Flex>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={1}\n                placement=\"bottom\"\n                portal\n              >\n                <Card\n                  as=\"label\"\n                  flex=\"none\"\n                  padding={3}\n                  style={{\n                    lineHeight: 0,\n                    borderRadius: 999,\n                    userSelect: 'none',\n                  }}\n                  tone={overlaysEnabled ? 'positive' : undefined}\n                >\n                  <Flex align=\"center\" gap={2}>\n                    <div style={{ margin: -2 }}>\n                      <StyledSwitch\n                        checked={overlaysEnabled}\n                        onChange={toggleOverlay}\n                        disabled={\n                          iframe.status === 'loading' ||\n                          overlaysConnection !== 'connected'\n                        }\n                      />\n                    </div>\n                    <Box>\n                      <Text muted size={1} weight=\"medium\">\n                        Edit\n                      </Text>\n                    </Box>\n                  </Flex>\n                </Card>\n              </Tooltip>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loading'\n                      ? 'Loading…'\n                      : iframe.status === 'reloading'\n                        ? 'Refreshing…'\n                        : iframe.status === 'refreshing'\n                          ? 'Refreshing…'\n                          : 'Refresh preview'}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label=\"Refresh preview\"\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={\n                    iframe.status === 'reloading' ||\n                    iframe.status === 'refreshing'\n                  }\n                  onClick={handleRefresh}\n                  padding={3}\n                />\n              </Tooltip>\n\n              <Box flex={1}>\n                <PreviewLocationInput\n                  onChange={onPathChange}\n                  origin={previewLocationOrigin}\n                  value={previewLocationRoute}\n                />\n              </Box>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ShareIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                    />\n                  }\n                  id=\"location-menu\"\n                  menu={\n                    <Menu>\n                      <ShareUrlMenuItems\n                        initialUrl={initialUrl}\n                        openPopup={openPopup}\n                        previewLocationOrigin={previewLocationOrigin}\n                        previewLocationRoute={previewLocationRoute}\n                      />\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ChevronDownIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                      text={\n                        PERSPECTIVE_TITLES[\n                          loadersConnection === 'connected'\n                            ? perspective\n                            : 'previewDrafts'\n                        ]\n                      }\n                      loading={\n                        loadersConnection === 'reconnecting' &&\n                        iframe.status !== 'loaded'\n                      }\n                      disabled={loadersConnection !== 'connected'}\n                    />\n                  }\n                  id=\"perspective-menu\"\n                  menu={\n                    <Menu style={{ maxWidth: 240 }}>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() =>\n                          dispatch({\n                            type: ACTION_PERSPECTIVE,\n                            perspective: 'previewDrafts',\n                          })\n                        }\n                        padding={3}\n                        pressed={perspective === 'previewDrafts'}\n                        tone={PERSPECTIVE_TONES.previewDrafts}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(PERSPECTIVE_ICONS.previewDrafts)}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES.previewDrafts}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with latest draft content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity:\n                                  perspective === 'previewDrafts' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() =>\n                          dispatch({\n                            type: ACTION_PERSPECTIVE,\n                            perspective: 'published',\n                          })\n                        }\n                        padding={3}\n                        pressed={perspective === 'published'}\n                        tone={PERSPECTIVE_TONES.published}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(PERSPECTIVE_ICONS.published)}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES.published}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with published content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity: perspective === 'published' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Full viewport</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Full viewport\"\n                    fontSize={1}\n                    icon={DesktopIcon}\n                    mode=\"bleed\"\n                    onClick={setDesktopMode}\n                    padding={3}\n                    selected={viewport === 'desktop'}\n                  />\n                </Tooltip>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Narrow viewport</Text>}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Narrow viewport\"\n                    fontSize={1}\n                    icon={MobileDeviceIcon}\n                    mode=\"bleed\"\n                    onClick={setMobileMode}\n                    padding={3}\n                    selected={viewport === 'mobile'}\n                  />\n                </Tooltip>\n              </Flex>\n            </Flex>\n          </Card>\n\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={viewport === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]:\n                        'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition:\n                        '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[viewport] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text=\"Continue anyway\"\n                          style={{ opacity: 0 }}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex\n                          justify=\"center\"\n                          align=\"center\"\n                          direction=\"column\"\n                          gap={4}\n                        >\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut ? (\n                              <>\n                                Unable to connect, check the browser console for\n                                more information.\n                              </>\n                            ) : (\n                              'Connecting…'\n                            )}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text=\"Continue anyway\"\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' &&\n                      iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[viewport] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        Loading…\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                      borderTop: '1px solid transparent',\n                      boxShadow: '0 0 0 1px var(--card-border-color)',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message=\"Could not connect to the preview\"\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Overlay connection status\n                                </Label>\n                                <Code size={1}>{overlaysConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Loader connection status\n                                </Label>\n                                <Code size={1}>{loadersConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                ref={ref}\n                style={{\n                  pointerEvents:\n                    (loading ||\n                      (overlaysConnection === 'connecting' &&\n                        iframe.status !== 'refreshing')) &&\n                    !continueAnyway\n                      ? 'none'\n                      : 'auto',\n                  boxShadow: '0 0 0 1px var(--card-border-color)',\n                  borderTop: '1px solid transparent',\n                }}\n                src={initialUrl.toString()}\n                initial={['background']}\n                variants={iframeVariants}\n                animate={[\n                  (loading ||\n                    (overlaysConnection === 'connecting' &&\n                      iframe.status !== 'refreshing')) &&\n                  !continueAnyway\n                    ? 'background'\n                    : 'active',\n                  loading ? 'reloading' : 'idle',\n                  viewport,\n                  showOverlaysConnectionStatus && !continueAnyway\n                    ? 'timedOut'\n                    : '',\n                ]}\n                onLoad={onIFrameLoad}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  },\n)\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import type { ClientPerspective } from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport { MutableRefObject, useCallback, useMemo, useRef, useState } from 'react'\n\nimport type { PresentationState } from './reducers/presentationReducer'\nimport type { FrameState } from './types'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function useDocumentsOnPage(\n  perspective: PresentationState['perspective'],\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (\n    key: string,\n    perspective: PresentationState['perspective'],\n    state: DocumentOnPage[],\n  ) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    (\n      key: string,\n      perspective: ClientPerspective,\n      sourceDocuments: DocumentOnPage[] = [],\n    ) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n          if (!warnedAboutCrossDatasetReference) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              'Cross dataset references are not supported yet, ignoring source document',\n              sourceDocument,\n            )\n            warnedAboutCrossDatasetReference = true\n          }\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache =\n        perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return { [key]: next }\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return { ...cache, [key]: next }\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nimport type { PresentationStateParams } from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(\n  state: PresentationStateParams,\n): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import { MutableRefObject, useEffect, useMemo, useRef } from 'react'\nimport { getPublishedId } from 'sanity'\nimport { RouterContextValue, RouterState, SearchParam } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parseRouterState } from './lib/parse'\nimport {\n  DeskDocumentPaneParams,\n  FrameState,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: PresentationNavigate\n  params: PresentationParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const { id, path, type } = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    })\n    return pruned\n  }, [\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const navigate = useMemo(\n    () =>\n      debounce<PresentationNavigate>(\n        (nextState, nextSearchState = {}, forceReplace) => {\n          // Force navigation to use published IDs only\n          if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n          // Extract type, id and path as 'routerState'\n          const { _searchParams: routerSearchParams, ...routerState } =\n            routerStateRef.current\n\n          // Convert array of search params to an object\n          const routerSearchState = (routerSearchParams || []).reduce(\n            (acc, [key, value]) => (\n              (acc[key as keyof PresentationSearchParams] = value), acc\n            ),\n            {} as PresentationSearchParams,\n          )\n\n          // Merge routerState and incoming state\n          const state: RouterState = pruneObject({\n            ...routerState,\n            ...nextState,\n          })\n\n          // Merge routerSearchState and incoming searchState\n          const searchState = pruneObject({\n            ...routerSearchState,\n            ...nextSearchState,\n          })\n\n          // If the document has changed, clear the template and templateParams\n          if (routerState.id !== state.id) {\n            delete searchState.template\n            delete searchState.templateParams\n          }\n\n          state._searchParams = Object.entries(searchState).reduce(\n            (acc, [key, value]) => [...acc, [key, value]],\n            [] as SearchParam[],\n          )\n\n          const replace =\n            forceReplace ?? searchState.preview === frameStateRef.current.url\n\n          routerNavigate(state, { replace })\n        },\n        50,\n      ),\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    deskParams,\n    navigate,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { startTransition, useEffect, useMemo, useState } from 'react'\nimport {\n  type SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { API_VERSION } from './constants'\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: API_VERSION })\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName)\n  const previewUrlSecret = usePreviewUrlSecret(\n    typeof previewUrl === 'object' || typeof previewUrl === 'function',\n    deps,\n  )\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        } else if (document.referrer) {\n          const referrerUrl = new URL(document.referrer)\n          if (referrerUrl.origin === resolvedUrl.origin) {\n            resultUrl = referrerUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) ||\n          resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object'\n        ? definePreviewUrl<SanityClient>(previewUrl)\n        : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      previewSearchParam,\n      referrer: typeof document === 'undefined' ? null : document.referrer,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n) {\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName],\n  )\n}\n\nfunction usePreviewUrlSecret(\n  enabled: boolean,\n  deps: (string | symbol | undefined)[],\n) {\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() =>\n        setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()),\n      )\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {\n  type ChannelsController,\n  type ChannelStatus,\n  createChannelsController,\n} from '@sanity/channels'\nimport { studioPath } from '@sanity/client/csm'\nimport { BoundaryElementProvider, Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type LoaderMsg,\n  type OverlayMsg,\n  type PresentationMsg,\n  type PreviewKitMsg,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  lazy,\n  type ReactElement,\n  startTransition,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique, useWorkspace } from 'sanity'\nimport {\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n} from 'sanity/structure'\nimport styled from 'styled-components'\n\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n  MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n} from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport { DisplayedDocumentBroadcasterProvider } from './loader/DisplayedDocumentBroadcaster'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { usePresentationNavigator } from './PresentationNavigator'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport type {\n  DeskDocumentPaneParams,\n  FrameState,\n  LiveQueriesState,\n  LiveQueriesStateValue,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst PostMessageRefreshMutations = lazy(\n  () => import('./editor/PostMessageRefreshMutations'),\n)\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] =\n    useState<ChannelsController<LoaderMsg | PresentationMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<LiveQueriesState>({})\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const { params, deskParams, navigate } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  const [state, dispatch] = useReducer(\n    presentationReducer,\n    { perspective: params.perspective, viewport: params.viewport },\n    presentationReducerInit,\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(\n    state.perspective,\n    frameStateRef,\n  )\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  // Update the perspective and viewport when the param changes\n  useEffect(() => {\n    if (\n      state.perspective !== params.perspective ||\n      state.viewport !== params.viewport\n    ) {\n      navigate(\n        {},\n        {\n          perspective:\n            state.perspective === 'previewDrafts'\n              ? undefined\n              : state.perspective,\n          viewport: state.viewport === 'desktop' ? undefined : state.viewport,\n        },\n      )\n    }\n  }, [\n    params.perspective,\n    state.perspective,\n    navigate,\n    state.viewport,\n    params.viewport,\n  ])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ChannelStatus>('connecting')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ChannelStatus>('connecting')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ChannelStatus>('connecting')\n\n  const [popups] = useState<Set<Window>>(() => new Set())\n  const handleOpenPopup = useCallback(\n    (url: string) => {\n      const source = window.open(url, '_blank')\n      if (source) {\n        popups.add(source)\n      }\n    },\n    [popups],\n  )\n\n  useEffect(() => {\n    if (popups.size && channel) {\n      // loop popups and call channel.addSource\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          channel.addSource(source)\n        }\n      }\n    }\n  }, [channel, popups, popups.size])\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target) return\n\n    const nextChannel = createChannelsController<\n      PresentationMsg,\n      LoaderMsg | OverlayMsg | VisualEditingMsg | PreviewKitMsg\n    >({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      target,\n      targetOrigin,\n      connectTo: [\n        {\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setOverlaysConnection,\n          onEvent(type, data) {\n            if (\n              (type === 'visual-editing/focus' || type === 'overlay/focus') &&\n              'id' in data\n            ) {\n              navigate({\n                type: data.type,\n                id: data.id,\n                path: data.path,\n              })\n            } else if (\n              type === 'visual-editing/navigate' ||\n              type === 'overlay/navigate'\n            ) {\n              const { title, url } = data\n              if (frameStateRef.current.url !== url) {\n                navigate({}, { preview: url })\n              }\n              frameStateRef.current = { title, url }\n            } else if (type === 'visual-editing/meta') {\n              frameStateRef.current.title = data.title\n            } else if (\n              type === 'visual-editing/toggle' ||\n              type === 'overlay/toggle'\n            ) {\n              dispatch({\n                type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n                enabled: data.enabled,\n              })\n            } else if (type === 'visual-editing/documents') {\n              setDocumentsOnPage(\n                'visual-editing',\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data.perspective as unknown as any,\n                data.documents,\n              )\n            } else if (\n              type === 'visual-editing/refreshing' &&\n              data.source === 'manual'\n            ) {\n              clearTimeout(refreshRef.current)\n            } else if (\n              type === 'visual-editing/refreshing' &&\n              data.source === 'mutation'\n            ) {\n              dispatch({ type: ACTION_IFRAME_REFRESH })\n            } else if (type === 'visual-editing/refreshed') {\n              dispatch({ type: ACTION_IFRAME_LOADED })\n            }\n          },\n        },\n        {\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setLoadersConnection,\n          onEvent(type, data) {\n            if (\n              type === 'loader/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(\n                'loaders',\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data.perspective as unknown as any,\n                data.documents,\n              )\n            } else if (\n              type === 'loader/query-listen' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              if (\n                typeof data.heartbeat === 'number' &&\n                data.heartbeat < MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL\n              ) {\n                throw new Error(\n                  `Loader query listen heartbeat interval must be at least ${MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL}ms`,\n                )\n              }\n              setLiveQueries((prev) => ({\n                ...prev,\n                [getQueryCacheKey(data.query, data.params)]: {\n                  perspective: data.perspective,\n                  query: data.query,\n                  params: data.params,\n                  receivedAt: Date.now(),\n                  heartbeat: data.heartbeat ?? false,\n                } satisfies LiveQueriesStateValue,\n              }))\n            }\n          },\n        },\n        {\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setPreviewKitConnection,\n          onEvent(type, data) {\n            if (\n              type === 'preview-kit/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(\n                'preview-kit',\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data.perspective as unknown as any,\n                data.documents,\n              )\n            }\n          },\n        },\n      ],\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.destroy()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, navigate, targetOrigin])\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        startTransition(() =>\n          setLiveQueries((liveQueries) => {\n            if (Object.keys(liveQueries).length < 1) {\n              return liveQueries\n            }\n\n            const now = Date.now()\n            const hasAnyExpired = Object.values(liveQueries).some(\n              (liveQuery) =>\n                liveQuery.heartbeat !== false &&\n                now > liveQuery.receivedAt + liveQuery.heartbeat,\n            )\n            if (!hasAnyExpired) {\n              return liveQueries\n            }\n            const next = {} as LiveQueriesState\n            for (const [key, value] of Object.entries(liveQueries)) {\n              if (\n                value.heartbeat !== false &&\n                now > value.receivedAt + value.heartbeat\n              ) {\n                continue\n              }\n              next[key] = value\n            }\n            return next\n          }),\n        ),\n      MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({ path: studioPath.toString(nextPath) }, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        navigate({}, { preview })\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      navigate({}, deskParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a perspective message when the perspective changes\n  useEffect(() => {\n    channel?.send('overlays', 'presentation/perspective', {\n      perspective: state.perspective,\n    })\n  }, [channel, state.perspective])\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('overlays', 'presentation/focus', {\n        id: params.id,\n        path: params.path,\n      })\n    } else {\n      channel?.send('overlays', 'presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        channel?.send('overlays', 'presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [channel, overlaysConnection, targetOrigin, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('overlays', 'presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(\n    null,\n  )\n\n  const [{ navigatorEnabled, toggleNavigator }, PresentationNavigator] =\n    usePresentationNavigator({ unstable_navigator })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, { rev: undefined })\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>()\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({ type: ACTION_IFRAME_REFRESH })\n      if (channel) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        channel.send('overlays', 'presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' ||\n            loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [channel, loadersConnection, previewKitConnection],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({ id, type, path }) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        navigate={navigate}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                <PresentationNavigator />\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex\n                    direction=\"column\"\n                    flex={1}\n                    height=\"fill\"\n                    ref={setBoundaryElement}\n                  >\n                    <BoundaryElementProvider element={boundaryElement}>\n                      <PreviewFrame\n                        dispatch={dispatch}\n                        iframe={state.iframe}\n                        initialUrl={initialPreviewUrl}\n                        loadersConnection={loadersConnection}\n                        navigatorEnabled={navigatorEnabled}\n                        onPathChange={handlePreviewPath}\n                        onRefresh={handleRefresh}\n                        openPopup={handleOpenPopup}\n                        overlaysConnection={overlaysConnection}\n                        params={params}\n                        perspective={state.perspective}\n                        ref={iframeRef}\n                        targetOrigin={targetOrigin}\n                        toggleNavigator={toggleNavigator}\n                        toggleOverlay={toggleOverlay}\n                        viewport={state.viewport}\n                        visualEditing={state.visualEditing}\n                      />\n                    </BoundaryElementProvider>\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <DisplayedDocumentBroadcasterProvider\n                    documentId={params.id}\n                    setDisplayedDocument={setDisplayedDocument}\n                  >\n                    <CommentsIntentProvider getIntent={getCommentIntent}>\n                      <ContentEditor\n                        refs={documentsOnPage}\n                        deskParams={deskParams}\n                        documentId={params.id}\n                        documentType={params.type}\n                        onDeskParams={handleDeskParams}\n                        onFocusPath={handleFocusPath}\n                        previewUrl={params.preview}\n                      />\n                    </CommentsIntentProvider>\n                  </DisplayedDocumentBroadcasterProvider>\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <Suspense>\n          <LoaderQueries\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective={state.perspective}\n            liveDocument={displayedDocument}\n            documentsOnPage={documentsOnPage}\n          />\n        </Suspense>\n      )}\n      {channel && params.id && params.type && (\n        <Suspense>\n          <PostMessageRefreshMutations\n            channel={channel}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        </Suspense>\n      )}\n    </>\n  )\n}\n"],"names":["jsxRuntime","require","csm","ui","react","sanity","router","structure","styled","index","DisplayedDocumentBroadcaster","icons","withoutSecretSearchParams","framerMotion","createSecret","isEqual","definePreviewUrl","suspendReact","_interopDefaultCompat","e","default","styled__default","isEqual__default","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","HANDSHAKE_INTERVAL","HANDSHAKE_MSG_TYPES","isHandshakeMessage","type","some","t","isLegacyHandshakeMessage","data","Array","isArray","every","key","startsWith","createChannelsControllerInternal","config","target","channels","connectTo","map","buffer","id","handler","handshakeHandler","status","interval","heartbeat","stopHandshake","channel","window","clearInterval","find","from","setChannelStatus","sendHandshake","messageHandler","_a","_b","_c","connectionId","args","onEvent","call","send","responseTo","handleEvents","console","error","origin","domain","to","includes","targetOrigin","isValidMessageEvent","stopHeartbeat","next","onStatusUpdate","uuid","setInterval","startHandshake","heartbeatInverval","startHeartbeat","toFlush","splice","length","forEach","flush","msg","postMessage","expectResponse","maxWait","setTimeout","removeEventListener","transact","warn","eventData","clearTimeout","addEventListener","destroy","store","store2","store3","store4","ValiError","constructor","issues","super","message","__publicField","this","name","defaultArgs","arg1","arg2","i18n","schema","context","reference","issue","_d","_e","lang","get","getSpecificMessage","getGlobalMessage","schemaResult","typed","output","stringify","input","Object","getPrototypeOf","pipeIssue","received","schemaIssue2","reason","expected","expects","label","requirement","path","abortEarly","abortPipeEarly","skipPipe","pipeResult","pipe","action","result","_parse","actionIssue2","schemaIssue","other","fallback","fallback2","info","getFallback","object","entries","arg3","arg4","rest","error2","pipe2","restAndDefaultArgs","cachedEntries","async","value2","pathItem","value","unshift","picklist","join","parse","getGlobalConfig","b","y","m","u","alt","ctrl","mod","test","navigator","platform","shift","c","ErrorCard","props","children","onRetry","onContinueAnyway","restProps","retryButton","Button","fontSize","mode","onClick","text","continueAnywayButton","jsx","tone","Card","height","Flex","align","justify","Container","padding","sizing","width","jsxs","Stack","space","Text","size","weight","muted","Inline","Box","usePresentationTool","presentation","useContext","PresentationContext","resolveQueryStringFromParams","nextParams","allowed","params","parts","encodeQueryString","filter","reduce","obj","BackLink","forwardRef","ref","deskParams","StateLink","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","parentRefPath","template","previewUrl","PresentationPaneRouterProvider","onDeskParams","refs","routerState","resolvePathFromState","useRouter","routerSearchParams","useUnique","fromEntries","createPathWithParams","useCallback","useMemo","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","r","_id","getPublishedId","_type","ParameterizedLink","Fragment","closeCurrentAndAfter","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","PaneRouterContext","Provider","RootLayout","PaneLayout","Root","WrappedCode","Code","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","useState","handleRetry","useEffect","flex","overflow","radius","Label","ErrorBoundary","onCatch","StructureToolProvider","direction","DeskDocumentListPane","itemId","paneKey","DocumentPane","onFocusPath","templateParams","paneDocumentNode","templateParameters","decodeJsonParams","style","DeskDocumentPane","DocumentPanel","ContentEditor","PanelsContext","createContext","displayName","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","useLayoutEffect","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","useRef","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timeout","timer","apply","itemKey","getStoredItem","JSON","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","set","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","Map","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","has","delete","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","disconnect","PresentationNavigateProvider","navigate","_navigate","document","PresentationNavigateContext","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","defaultValue","setValue","useLocalState","navigatorEnabled","toggleNavigator","enabled","Component","Navigator","memo","NavigatorComponent","navigatorDisabled","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","ACTION_IFRAME_LOADED","ACTION_IFRAME_REFRESH","ACTION_IFRAME_RELOAD","ACTION_PERSPECTIVE","ACTION_VIEWPORT","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","presentationReducer","iframe","perspective","perspectiveSchema","viewport","viewportSchema","toggleVisualEditingOverlays","visualEditing","overlaysEnabled","iframeStatusSchema","initStateSchema","boolean","INITIAL_PRESENTATION_STATE","presentationReducerInit","IFrame","motion","PreviewLocationInput","basePath","useActiveWorkspace","activeWorkspace","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","nextValue","handleBlur","resetButton","icon","ResetIcon","TextInput","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","ShareUrlMenuItems","initialUrl","openPopup","previewLocationOrigin","previewLocationRoute","handleOpenPopup","href","CopyUrlMenuButton","MenuItem","LaunchIcon","as","rel","pushToast","useToast","client","useClient","apiVersion","API_VERSION","A","currentUser","useCurrentUser","setDisabled","clipboard","closable","url","onFinally","onError","description","hasSecretSearchParams","ClipboardItem","item","previewUrlSecret","createPreviewSecret","location","setSecretSearchParams","secret","Blob","resolvePreviewUrl","write","then","catch","writeText","CopyIcon","MotionFlex","StyledSwitch","Switch","PERSPECTIVE_TITLES","previewDrafts","published","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","PreviewFrame","dispatch","loadersConnection","onPathChange","onRefresh","overlaysConnection","toggleOverlay","prefersReducedMotion","usePrefersReducedMotion","setDesktopMode","setMobileMode","loading","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleRefresh","src","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","M","URL","pathname","search","onIFrameLoad","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","MotionConfig","transition","duration","TooltipDelayGroupProvider","delay","shadow","position","gap","minHeight","Tooltip","animate","content","fallbackPlacements","placement","portal","PanelLeftIcon","selected","whiteSpace","paddingY","Hotkeys","keys","marginTop","marginBottom","lineHeight","borderRadius","userSelect","margin","checked","RefreshIcon","MenuButton","button","iconRight","ShareIcon","menu","Menu","popover","constrainSize","ChevronDownIcon","pressed","createElement","opacity","CheckmarkIcon","DesktopIcon","MobileDeviceIcon","cursor","AnimatePresence","initial","exit","variants","spinnerVariants","inset","sizes","Spinner","errorVariants","background","borderTop","boxShadow","backdropFilter","WebkitBackdropFilter","WebkitTransition","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","warnedAboutCrossDatasetReference","parseId","rawId","segments","decodeURIComponent","split","parsePath","rawPath","studioPath","exec","e2","Number","o","s","_key","urlStringToPath","pruneObject","useParams","initialPreviewUrl","routerNavigate","frameStateRef","rev","since","view","pathKey","instruction","comment","routerStateRef","nextState","nextSearchState","forceReplace","routerSearchState","searchState","replace","usePreviewUrl","toolName","previewSearchParam","workspace","workspaceName","deps","resolveUUID","useSuspendCacheKeys","secretLastExpiredAt","setSecretLastExpiredAt","suspend","startTransition","expiresAt","getTime","Date","now","usePreviewUrlSecret","resolvedUrl","resultUrl","restoredUrl","referrer","referrerUrl","studioBasePath","Symbol","LoaderQueries","lazy","Promise","resolve","PostMessageRefreshMutations","exports","_previewUrl","components","tool","DEFAULT_TOOL_NAME","option","hostname","iframeRef","setChannel","liveQueries","setLiveQueries","useReducer","documentsOnPage","setDocumentsOnPage","setPublished","setPreviewDrafts","urlRef","sourceDocuments","documents","sourceDocument","_projectId","cache","uniqueDocuments","doc","useDocumentsOnPage","projectId","useProjectId","dataset","useDataset","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","popups","Set","source","open","add","closed","addSource","contentWindow","nextChannel","sources","sendToSource","WeakMap","destroySource","prevConnectTo","createChannelsController","refreshRef","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","query","receivedAt","liveQuery","handleFocusPath","nextPath","handlePreviewPath","handleDeskParams","displayedDocument","setDisplayedDocument","handleKeyUp","handleKeydown","toUpperCase","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","livePreviewEnabled","useWorkspace","getCommentIntent","COMMENTS_INSPECTOR_NAME","C","EDIT_INTENT_MODE","E","BoundaryElementProvider","DisplayedDocumentBroadcasterProvider","D","CommentsIntentProvider","getIntent","Suspense","liveDocument"],"mappings":"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","x_google_ignoreList":[0,1,2,3,7]}